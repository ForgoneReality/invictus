/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/background.js":
/*!***************************!*\
  !*** ./src/background.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Background)\n/* harmony export */ });\n/* harmony import */ var _star__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./star */ \"./src/star.js\");\n/* harmony import */ var _ship__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ship */ \"./src/ship.js\");\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./player */ \"./src/player.js\");\n/* harmony import */ var _drop__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./drop */ \"./src/drop.js\");\n/* harmony import */ var _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./circleDamageProjectile */ \"./src/circleDamageProjectile.js\");\n\n//background.js\n\n\n\n\n\n\nclass Background{\n    constructor(width, height, level_id, context, bgsong, gold, ship_level, parent, difficulty)\n    {\n        this.width = width;\n        this.height = height;\n        this.level_id = level_id;\n        this.context = context;\n        this.stars = [];\n        this.projectiles = [];\n        this.enemyprojectiles = [];\n        this.enemyships = [];\n        this.drops = [];\n        this.lasers = [];\n        this.extras = [];\n        this.ship_level = ship_level;\n        this.difficulty = difficulty;\n        this.createLevel(level_id);\n        this.initializeStars(context);\n\n        this.bgsong = bgsong;\n        //stats\n        this.enemiesdefeated = 0; //for achievement purposes in the future\n        this.gold = gold;\n        this.initial_gold = gold;\n        this.timer = 0;\n        this.parent = parent;\n        this.death = false; //might be extraneous because of this.continue\n        \n        this.continue = true;\n    };\n\n\n    createLevel(level)\n    {\n        this.player = new _player__WEBPACK_IMPORTED_MODULE_2__[\"default\"]([this.width / 2, this.height - 50], this.ship_level);\n        this.mouse_x = this.width / 2;\n        this.mouse_y = 0;\n        let handleMousemove = (event) => {\n            this.mouse_x = event.offsetX;\n            this.mouse_y = event.offsetY;\n        };\n          \n        //note: as explained in Player#animate, movement and other spontaneous events cannot be added here\n        //adding multiple eventlisteners for no reason below !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n        document.addEventListener('mousemove', handleMousemove);\n\n        if (level === 1)\n        {\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.15*this.width, -100*1.25], 0, this)); //type 1\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.44 * this.width, -480*1.25], 0, this)); //type 1\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.55*this.width, -133*1.25], 1, this)); //type 2\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.24 * this.width, -700*1.25], 1, this)); //type 2\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.5 * this.width, -600*1.25], 2, this)); //type 3\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.32 * this.width, -510*1.25], 3, this)); //type 4\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6*this.width, -780*1.25], 3, this)); //type 1\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.35 * this.width, -840*1.25], 2, this)); //type 3\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.24 * this.width, -985*1.25], 0, this)); //type 2\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.1 * this.width, -1050*1.25], 1, this)); //type 2\n            \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.8*this.width, -1090*1.25], 4, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.75*this.width, -333*1.25], 4, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.68*this.width, -1150*1.25], 1, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.13*this.width, -1200*1.25], 1, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.27*this.width, -1300*1.25], 3, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.43*this.width, -1400*1.25], 2, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.53*this.width, -1500*1.25], 2, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.63*this.width, -1640*1.25], 0, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.77*this.width, -1523*1.25], 4, this)); \n\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.23*this.width, -1776*1.25], 3, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.56*this.width, -1840*1.25], 3, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.4*this.width, -1890*1.25], 3, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.5*this.width, -1992*1.25], 4, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.1*this.width, -2040*1.25], 2, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6*this.width, -2100*1.25], 4, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.25*this.width, -2150*1.25], 1, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.53*this.width, -2160*1.25], 1, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.17*this.width, -2245*1.25], 3, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.48*this.width, -2324*1.25], 2, this));\n\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.5*this.width, -2500*1.25], 0, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.38*this.width, -2570*1.25], 0, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.62*this.width, -2570*1.25], 0, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.26*this.width, -2640*1.25], 0, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.74*this.width, -2640*1.25], 0, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.14*this.width, -2710*1.25], 0, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.87*this.width, -2710*1.25], 0, this));  \n\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.47*this.width, -2930*1.25], 3, this));  \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.2*this.width, -2970*1.25], 2, this));  \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.45*this.width, -3050*1.25], 5, this));    \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.7*this.width, -3150*1.25], 1, this));  \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.35*this.width, -3150*1.25], 1, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.5*this.width, -3270*1.25], 4, this));  \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.2*this.width, -3310*1.25], 3, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.66*this.width, -3400*1.25], 5, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.4*this.width, -3400*1.25], 5, this));\n\n\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.43*this.width, -3480*1.25], 1, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.2*this.width, -3480*1.25], 2, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.72*this.width, -3550*1.25], 5, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.34*this.width, -3550*1.25], 5, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.15*this.width, -3630*1.25], 3, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.61*this.width, -3630*1.25], 3, this));\n\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.5*this.width, -4100*1.25], 0, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.38*this.width, -4000*1.25], 0, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.62*this.width, -4000*1.25], 0, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.26*this.width, -3900*1.25], 0, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.74*this.width, -3900*1.25], 0, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.14*this.width, -3810*1.25], 0, this)); \n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.87*this.width, -3810*1.25], 0, this));  \n\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.12*this.width, -4800 *1.25], 6, this, true)); \n        }\n        if (level === 2)\n        {\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.5*this.width, -100 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.7*this.width, -200 * 1.5 -900], 3, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.23*this.width, -300 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.42*this.width, -380 * 1.5 -900], 4, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.56*this.width, -440 * 1.5 -900], 4, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.7*this.width, -500 * 1.5 -900], 5, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3*this.width, -555 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.55*this.width, -600 * 1.5 -900], 1, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.71*this.width, -666 * 1.5 -900], 2, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.5*this.width, -700 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.8*this.width, -750 * 1.5 -900], 5, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.42*this.width, -888 * 1.5 -900], 4, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.5*this.width, -950 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.65*this.width, -1000 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.47*this.width, -1075 * 1.5 -900], 2, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.28*this.width, -1170 * 1.5 -900], 9, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.45*this.width, -1200 * 1.5 -900], 8, this));\n\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.65*this.width, -1300 * 1.5 -900], 3, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3*this.width, -1300 * 1.5 -900], 3, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.23*this.width, -1321 * 1.5 -900], 8, this));\n\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.7*this.width, -1362 * 1.5 -900], 2, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.58*this.width, -1500 * 1.5 -900], 10, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.4*this.width, -1567 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.74*this.width, -1580 * 1.5 -900], 4, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.54*this.width, -1626 * 1.5 -900], 5, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.25*this.width, -1700 * 1.5 -900], 1, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.43*this.width, -1720 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.36*this.width, -1776 * 1.5 -900], 9, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.69*this.width, -1878 * 1.5 -900], 5, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.75*this.width, -1920 * 1.5 -900], 3, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.83*this.width, -2000 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.27*this.width, -2065 * 1.5 -900], 2, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.38*this.width, -2100 * 1.5 -900], 10, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.64*this.width, -2123 * 1.5 -900], 4, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.5*this.width, -2180 * 1.5 -900], 5, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.25*this.width, -2200 * 1.5 -900], 9, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.1*this.width, -2300 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3*this.width, -2300 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.5*this.width, -2300 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.7*this.width, -2300 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.9*this.width, -2300 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.35*this.width, -2520 * 1.5 -900], 0, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.65*this.width, -2450 * 1.5 -900], 5, this));\n\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([0*this.width, -2600 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.2*this.width, -2600 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.4*this.width, -2600 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6*this.width, -2600 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.8*this.width, -2600 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3*this.width, -2700 * 1.5 -900], 2, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.5*this.width, -2700 * 1.5 -900], 1, this));\n\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.33*this.width, -2825 * 1.5 -900], 9, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.66*this.width, -2950 * 1.5 -900], 3, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.52*this.width, -3034 * 1.5 -900], 10, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.22*this.width, -3090 * 1.5 -900], 3, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.75*this.width, -3150 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.64*this.width, -3240 * 1.5 -900], 2, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.44*this.width, -3333 * 1.5 -900], 4, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.44*this.width, -3400 * 1.5 -900], 8, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.44*this.width, -3456 * 1.5 -900], 1, this));\n\n            this.drops.push(new _drop__WEBPACK_IMPORTED_MODULE_3__[\"default\"]([.44*this.width, -5600], 4));\n\n\n            let newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n            \n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.2* this.width, -300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.1* this.width, -300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.15* this.width, -300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.25* this.width, -300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.05* this.width, -300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([0, -300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.05* this.width, -300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.65* this.width, -300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.7* this.width, -300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.75* this.width, -300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.8* this.width, -300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.85* this.width, -300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.9* this.width, -300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.95* this.width, -300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            //\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n            \n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.2* this.width, -325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.1* this.width, -325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.15* this.width, -325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.25* this.width, -325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.05* this.width, -325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([0, -325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.05* this.width, -325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.65* this.width, -325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.7* this.width, -325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.75* this.width, -325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.8* this.width, -325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.85* this.width, -325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.9* this.width, -325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.95* this.width, -325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n            //\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n            \n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.2* this.width, -350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.1* this.width, -350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.15* this.width, -350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.25* this.width, -350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.05* this.width, -350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([0, -350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.05* this.width, -350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.65* this.width, -350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.7* this.width, -350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.75* this.width, -350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.8* this.width, -350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.85* this.width, -350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.9* this.width, -350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.95* this.width, -350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n            //\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -375*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -375*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -400*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -400*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -425*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -425*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -450*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -450*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -475*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -475*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -500*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -500*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -525*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -525*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -550*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -550*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -575*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -575*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -600*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -600*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -625*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -625*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -650*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -650*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -675*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -675*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -700*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -700*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -725*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -725*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -750*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -750*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -775*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -775*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -800*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -800*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.45*this.width, -400 * 1.5 - 5700], 0, this)); \n\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.44*this.width, -650 * 1.5 - 5700], 2, this)); \n\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.365*this.width, -875 * 1.5 - 5700], 9, this)); \n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -825*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -825*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -850*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -850*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -875*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -875*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -900*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -900*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -925*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -925*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -950*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -950*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            //zig-zag\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.575* this.width, -975*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.275* this.width, -975*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.55* this.width, -1000*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.25* this.width, -1000*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.525* this.width, -1025*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.225* this.width, -1025*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.5* this.width, -1050*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.2* this.width, -1050*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.475* this.width, -1075*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.175* this.width, -1075*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n            \n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.45* this.width, -1100*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.15* this.width, -1100*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n            \n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.425* this.width, -1125*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.125* this.width, -1125*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.4* this.width, -1150*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.1* this.width, -1150*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.425* this.width, -1175*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.125* this.width, -1175*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.45* this.width, -1200*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.15* this.width, -1200*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.475* this.width, -1225*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.175* this.width, -1225*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.5* this.width, -1250*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.2* this.width, -1250*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.525* this.width, -1275*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.225* this.width, -1275*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.55* this.width, -1300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.25* this.width, -1300*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.575* this.width, -1325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.275* this.width, -1325*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -1350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3 * this.width, -1350*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.45 * this.width, -1350*1.5 - 5700], 1, this);\n            newShip.velY = 1.5;\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.625 * this.width, -1375*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.325 * this.width, -1375*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.65* this.width, -1400*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.35* this.width, -1400*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n            \n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.675* this.width, -1425*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.375* this.width, -1425*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.7* this.width, -1450*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.4* this.width, -1450*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.725* this.width, -1475*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.425* this.width, -1475*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n            \n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.75* this.width, -1500*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.45* this.width, -1500*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.775* this.width, -1525*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.475* this.width, -1525*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n            \n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.75* this.width, -1550*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.45* this.width, -1550*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.725* this.width, -1575*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.425* this.width, -1575*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n            \n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.7* this.width, -1600*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.4* this.width, -1600*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.55 * this.width, -1600*1.5 - 5700], 1, this);\n            newShip.velY = 1.5;\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.675* this.width, -1625*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.375* this.width, -1625*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.65* this.width, -1650*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.35* this.width, -1650*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.625* this.width, -1675*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.325* this.width, -1675*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -1700*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -1700*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -1725*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -1725 * 1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n            \n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.6* this.width, -1750*1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            newShip = new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.3* this.width, -1750 * 1.5 - 5700], 8, this);\n            \n            newShip.velY = 1.5;\n            newShip.health = 351\n            this.enemyships.push(newShip);\n\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.34*this.width, -5750 * 1.5], 10, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.62 * this.width, -5750 * 1.5], 10, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.48*this.width, -5900 * 1.5], 9, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.2*this.width, -5875 * 1.5], 4, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.76*this.width, -5875 * 1.5], 3, this));\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([.14*this.width, -7200 * 1.5], 11, this, true));\n\n            //this can be refactored to not be hardcoded, but idc\n            let pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -6500 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -7000 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -7500 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -8000 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -8500 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -9000 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -9500 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -10000 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -10500 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -11000 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -11500 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -12000 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -12500 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -13000 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -13500 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -14000 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -14500 * 1.5], 8, this));\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -15000 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -15500 * 1.5], 8, this));\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -16000 * 1.5], 8, this));\n\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -16500 * 1.5], 8, this));\n            pos = Math.random()*0.9 + 0.05;\n            this.enemyships.push(new _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([pos*this.width, -17000 * 1.5], 8, this));\n        }\n    }\n\n    initializeStars(context)\n    {\n\n        for(let i = 0; i < 15; i++)\n        {\n            let posx = Math.random() * (this.width-10);\n            //let posy = 0;\n            \n            let size;\n            if (Math.random()*2 > 1.7)\n            {\n                size = Math.random()* 4 + 1;\n            }\n            else\n                size = Math.random()*2 + 1;\n            \n            let mystar = new _star__WEBPACK_IMPORTED_MODULE_0__[\"default\"](posx, Math.random()*1 + 0.2 + (size / (8)), size);\n\n            mystar.posY = Math.random()*this.height-10;\n            this.stars.push(mystar);\n\n            context.shadowBlur = 0;\n        }\n    }\n\n    animate(){\n        let context = this.context;\n        \n        context.fillStyle = \"black\";\n        context.fillRect(0, 0, this.width, this.height);\n\n        if(this.continue) //probably can combine these two variables\n            {\n            this.createStars(context);\n\n            this.timer += 1;\n            if(this.level_id === 1 && this.timer === 5400) //NEEDS REFACTORING FOR DIFFERENT LEVELS... BOSS THEME\n            {\n                this.bgsong.fade(0.15, 0, 1500)\n            } \n            else if(this.level_id === 1 && this.timer === 5550) //NEEDS REFACTORING\n            {\n                let bgsong2 = audio.devour;\n\n                setTimeout( () => {\n                    bgsong2.play();\n                    if(this.bgsong!= null)\n                    {\n                        // alert(\"1\");\n                        this.bgsong.stop();\n                    }\n                    this.bgsong = bgsong2;\n                }, 100);\n            }\n            else if(this.level_id === 2 && this.timer === 8800)\n            {\n                this.bgsong.fade(0.18, 0, 2000)\n            }\n            else if(this.level_id === 2 && this.timer === 9400)\n            {\n                let bgsong2 = audio.ground;\n\n                setTimeout( () => {\n                    bgsong2.play();\n                    bgsong2.fade(0, 0.18, 2000)\n                    if(this.bgsong!= null)\n                    {\n                        // alert(\"2\");\n                        this.bgsong.stop();\n                    }\n                    this.bgsong = bgsong2;\n                }, 100);\n            }\n            \n            if(key.isPressed(\" \") )\n            {\n                let proj = this.player.shootProjectile(this.mouse_x, this.mouse_y, 2);\n                if (proj)\n                {\n                    if(this.player.projectileType === 3)\n                    {\n                        audio.laser3.play();\n                    }\n                    else\n                    {\n                        audio.laser4.play();\n                    }\n\n                    this.projectiles = this.projectiles.concat(proj);\n                }\n            }\n            else\n            {\n                this.player.shootProjectile(null, null, -1);\n            }\n\n            this.updateAll(context);\n            this.player.animate(this.context, this.mouse_x, this.mouse_y);\n            this.checkCollisions(context);\n\n            this.updateUI(context);\n\n            requestAnimationFrame(this.animate.bind(this));\n        }   \n        else if (!this.death)\n        {\n            this.parent.endLevel();\n        }\n        else{\n            //do nothing... let player press buttons to choose\n        }\n    }\n\n    createStars(context){\n        let numStars = 0;\n        for(let i=0; i<3; i++)\n        {\n            if(Math.random()*70 <= 1)\n            {\n                numStars++;\n            }\n        }\n        for(let j = 0; j< numStars; j++)\n        {\n            let posx = Math.random() * (this.width-10);\n            //let posy = 0;\n            \n            let size;\n            if (Math.random()*2 > 1.7)\n            {\n                size = Math.random()* 4 + 1;\n            }\n            else\n                size = Math.random()*2 + 1;\n\n            \n            let mystar = new _star__WEBPACK_IMPORTED_MODULE_0__[\"default\"](posx, Math.random()*1 + 0.2 + (size / (8)), size);\n            this.stars.push(mystar);\n            context.shadowBlur = 0;\n            // context.filter = \"none\";\n        }   \n    }\n\n    updateAll(context)\n    {\n\n        this.extras.forEach((extra) => {\n            extra.animate(this.context);\n        })\n\n        for(let i = this.extras.length - 1; i >= 0; i--) // problematic! need to go backwards\n        {\n            if(this.extras[i].duration <= 0)\n            {\n                setTimeout(()=> \n                {\n                    this.extras.splice(i, 1);\n                }, 0);\n                \n            }\n        }\n\n        this.lasers.forEach((laser) => {\n            laser.animate(this.context);\n        })\n\n        for(let i = this.lasers.length - 1; i >= 0; i--) // problematic! need to go backwards\n        {\n            if(this.lasers[i].duration <= 0)\n            {\n                setTimeout(()=> \n                {\n                    this.lasers.splice(i, 1);\n                }, 0);\n                \n            }\n        }\n\n        this.updateSomething(context, this.stars);\n\n        this.projectiles.forEach((proj) => {\n            proj.animate(this.context)\n        });\n\n        for(let i = this.projectiles.length - 1; i >= 0; i--) // problematic! need to go backwards\n        {\n            if(this.projectiles[i].outofBounds(this.width, this.height))\n            {\n                setTimeout(()=> \n                {\n                    this.projectiles.splice(i, 1);\n                }, 0);\n                \n            }\n        }\n\n        this.enemyprojectiles.forEach((proj) => {\n            proj.animate(this.context)\n        });\n\n        for(let i = this.enemyprojectiles.length - 1; i >= 0; i--)\n        {\n            if(this.enemyprojectiles[i].outofBounds(this.width, this.height))\n            {\n                setTimeout(()=> \n                {\n                    this.enemyprojectiles.splice(i, 1);\n                }, 0);\n            }\n        }\n\n        this.updateSomething(context, this.enemyships);\n\n\n        this.drops.forEach((drop) => {\n            drop.animate(this.context)\n        });\n\n        for(let i = this.drops.length - 1; i >= 0; i--)\n        {\n            if(this.drops[i].outofBounds(this.width, this.height))\n            {\n                setTimeout(()=> \n                {\n                    this.drops.splice(i, 1);\n                }, 0);\n            }\n        }\n    }\n\n    handlePlayerDefeat()\n    {\n        this.bgsong.stop();\n        audio.loudboom.play();\n        this.death = true;\n        const explosion = document.querySelector(\"#explosion\");\n        const black_screen = document.querySelector(\"#black-screen\");\n        const gameover = document.querySelector(\"#gameover\");\n        const gameovermenu = document.querySelector(\"#gameovermenu\");\n        const replay_butt = document.querySelector(\"#replay-game-butt\");\n        \n\n        explosion.style.top = (this.player.realY()-70).toString() + \"px\";\n        explosion.style.left = (this.player.realX()).toString() + \"px\";\n        explosion.style.display = \"block\";\n        setTimeout(() =>\n        {\n            black_screen.style.display = \"block\";\n\n        }, 5500);\n        setTimeout(()=> \n        {\n            explosion.style.display = \"none\";\n        }, 4720);\n        setTimeout(()=> \n        {\n            this.bgsong = audio.gameover;\n            this.bgsong.play();\n            this.enemyprojectiles = [];\n            this.enemiesdefeated = 0;\n            this.gold = this.initial_gold;\n            this.enemyships = [];\n            this.projectiles = [];\n            this.extras = [];\n            this.lasers = [];\n            gameover.style.display = \"block\";\n            this.continue = false;\n\n        }, 10500);\n        setTimeout(()=> \n        {\n            gameovermenu.style.display = \"inline-block\";\n            replay_butt.addEventListener(\"click\", () => {\n                let bgsong2;\n\n                if(this.level_id === 1)\n                {\n                    bgsong2 = audio.dawnutopia;   \n                    setTimeout( () => {\n                        bgsong2.play();\n                        if(this.bgsong!= null)\n                        {\n                            // alert(\"3\");\n                            this.bgsong.stop();\n                        }\n                        this.bgsong = bgsong2;\n                    }, 100);\n                }\n                else\n                {\n                    setTimeout( () => {\n                        if(this.bgsong!= null)\n                        {\n                            // alert(\"4\");\n                            this.bgsong.stop();\n                        }\n                    }, 5);\n                }\n                // else if(this.level_id === 2)\n                // {\n                //     bgsong2 = audio.orbit;\n                // }\n\n                \n\n                black_screen.style.display = \"none\";\n                gameover.style.display = \"none\";\n                gameovermenu.style.display = \"none\";\n                let timeme;\n                if (this.level_id === 1)\n                {\n                    timeme = 2000;//for better music sync\n                }\n                else{\n                    timeme = 15;\n                }\n                setTimeout(() => {\n                    this.parent.start(this.difficulty);\n                }, timeme);\n            })\n        }, 12500);\n\n    }\n\n    updateSomething(context, something){\n      \n        for(let i = something.length - 1; i >= 0; i--)\n        {\n            if(something[i].posY > this.height + 50)\n            {\n                something.splice(i, 1);\n            }\n        }\n        \n        something.forEach( (thingie) => {\n            thingie.animate(context);\n        })\n    }\n\n    checkCollisions(context)\n    {\n        //change to for-loop\n        for(let i = this.enemyships.length - 1; i >= 0; i--)\n        {\n            for(let j = this.projectiles.length - 1; j >= 0; j--)\n            {\n                if(this.collidesWith(this.projectiles[j], this.enemyships[i], \"enemyship\"))\n                {\n                    this.enemyships[i].health -= this.projectiles[j].damage;\n                    setTimeout(()=> \n                    {\n                        this.projectiles.splice(j, 1);\n                    }, 0);\n           \n                    \n                    if(this.enemyships[i].health <= 0)\n                    {\n                    \n                        setTimeout(()=> \n                        {\n                            this.handleEnemyDefeat(this.enemyships[i]);\n                           \n                            this.enemyships.splice(i, 1);\n                        }, 0);\n\n                        if(this.enemyships[i].boss)\n                        {\n                            let x = this.enemyships[i].realX();\n                            let y = this.enemyships[i].realY();\n                            audio.loudboom.play();\n                            for(let i = 0; i < 15; i++)\n                            {\n                                \n                                //note: below may create drops outside the x-axis range... need fix\n                                this.drops.push(new _drop__WEBPACK_IMPORTED_MODULE_3__[\"default\"]([(x - 100)+ Math.random()*200, (y - 100) + Math.random() *200], 2));\n                                setTimeout( () => {\n                                    audio.levelcomplete.play();\n                                }, 2000);\n                                setTimeout( () => {\n                                    this.continue = false;\n                                }, 6000);\n                            }\n                        }\n                       \n                        break;\n                    }\n\n            \n                }\n            }\n        }\n\n        for(let j = this.enemyprojectiles.length - 1; j >= 0; j--)\n        {\n            if(this.collidesWith(this.player, this.enemyprojectiles[j]))\n            {\n                this.player.dealDamage(this.enemyprojectiles[j].damage);\n                audio.hit.play();\n                if(this.player.health <= 0)\n                {\n                    this.handlePlayerDefeat();\n                }\n                setTimeout(()=> \n                    {\n                        this.enemyprojectiles.splice(j, 1);\n                    }, 0);\n            }\n        }\n\n        for(let j = this.lasers.length - 1; j >= 0; j--)\n        {\n            if(this.collidesWith(this.player, this.lasers[j]))\n            {\n                this.player.dealDamage(this.lasers[j].damage);\n                if(this.player.health <= 0)\n                {\n                    this.handlePlayerDefeat();\n                }\n            }\n        }\n\n        //OPTIMIZATION ISSUE LOCATED HERE: CURRENTLY CHECKS ALLLLL SHIPS EVEN SHIPS FAR IN THE BACKGROUND\n     \n        for(let i = this.enemyships.length - 1; i >= 0; i--)\n        {\n            \n            if(this.enemyships[i].type === 11)\n            {\n                if(this.collidesWith(this.player, this.enemyships[i], \"corner\"))\n                // if(this.collidesWith(this.player, this.enemyships[i]))\n                {\n                    // alert(\"??!?\");\n                    this.player.dealDamage(1);\n\n                    if(this.player.health <= 0)\n                    {\n                        this.bgsong.stop();\n                    }\n\n                    let n = this.normalizedVector(this.player, this.enemyships[i]);\n                    this.player.collided = 20;\n                    this.player.velX = n[0] * 13;\n                    this.player.velY = n[1] * 13;\n                }\n            }\n            else\n            {\n                if(this.collidesWith(this.player, this.enemyships[i], \"enemyship\"))\n                {\n                    if(this.enemyships[i].type === 8)\n                    {\n                        this.player.dealDamage(20);\n                    }\n                    else\n                    {\n                        this.player.dealDamage(50);\n                    }\n\n                    if(this.player.health <= 0) //NON-DRY: Optimization is to take this out and put it as another class method to be called\n                    {\n                        this.handlePlayerDefeat();\n                        \n                        //HANDLE THIS CASE!!!!!!!!!!!!!!!!! SHIP SHOULD BE DEAD <- maybe? \n                    }\n\n                    \n                    \n                    \n                    let n = this.normalizedVector(this.player, this.enemyships[i]);\n                    this.player.collided = 20;\n                    this.player.velX = n[0] * 13;\n                    this.player.velY = n[1] * 13;\n\n                    if(!this.enemyships[i].boss && this.enemyships[i].type !== 8)\n                    {\n                        this.enemyships[i].health -= 25;\n                        this.enemyships[i].collided = 13;\n                        this.enemyships[i].velX = n[0] * -13;\n                        this.enemyships[i].velY = n[1] * -13;   \n                    }\n                    else if(this.enemyships[i].type === 8)\n                    {\n                        this.enemyships[i].health -= 150;  \n                    }\n\n                    if(this.enemyships[i].health <= 0)\n                    {\n                        setTimeout(()=> \n                            {\n                                this.handleEnemyDefeat(this.enemyships[i]);\n\n                                this.enemyships.splice(i, 1);\n                            }, 0);\n                    }\n            \n                }\n            }\n        }\n\n        for(let i = this.drops.length - 1; i >= 0; i--)\n        {\n            if(this.collidesWith(this.player, this.drops[i]))\n            {\n                audio.droppickup.play();\n                switch(this.drops[i].type)\n                {\n                    case 0: //health pack\n                        this.player.health = Math.min(this.player.health + 500, this.player.basehealth, this.player.health + this.player.basehealth / 2);\n                        break;\n                    case 1: //double fire\n                        this.player.projectileType = 2;\n                        this.player.shotsLeft = 50;\n                        break;\n                    case 2: //money\n                        this.gold += Math.floor(Math.random()* 6) * 1000 + 5000;\n                        break;\n                    case 3: //gamma ray\n                        this.player.projectileType = 3;\n                        this.player.shotsLeft = 60;\n                        break;\n                    case 4: \n                        this.player.shield = this.player.baseshield;\n                    break;\n\n                }\n                setTimeout(()=> \n                    {\n                        this.drops.splice(i, 1);\n                    }, 0);\n            }\n        }\n    }\n\n    collidesWith(a, b, type=\"normal\")\n    {\n        if(this.death === true)\n        {\n            return false;\n        }\n        if(type === \"normal\" || type === \"enemyship\")\n        {\n            if(type === \"enemyship\" && b.posY + b.height / 2 + 1 < 0)\n            {\n                return false;\n            }\n\n            if ((a.leftX() >= b.leftX() && a.leftX() <= b.rightX()) || (a.rightX() >= b.leftX() && a.rightX() <= b.rightX()))\n            {\n                if ((a.upY() >= b.upY() && a.upY() <= b.downY()) || (a.downY() >= b.upY() && a.downY() <= b.downY()))\n                {\n                    return true;\n                }\n            }\n            if ((b.leftX() >= a.leftX() && b.leftX() <= a.rightX()) || (b.rightX() >= a.leftX() && b.rightX() <= a.rightX()))\n            {\n                if ((b.upY() >= a.upY() && b.upY() <= a.downY()) || (b.downY() >= a.upY() && b.downY() <= a.downY()))\n                {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else if(type === \"corner\")\n        {\n            //THE BELOW OPTIMIZATION SHOULD ALSO BE IN NORMAL\n            console.log(\"colliding\");\n            console.log(b.posY + b.height / 2 + 1);\n            console.log(b.posY, b.height)\n\n            if(b.height === undefined || b.posY + b.height / 2 + 1 < 0)\n            {\n                return false;\n            }\n            //player is a, boss ship is b\n            //is the original use of corner, although other variations can arise\n            //assumes that an overlap will require a corner of A overlapping with some part of B\n            let cornersA = a.corners();\n            let cornersB = b.corners();\n\n            let b_area = (b.width) * (b.height);//area should be the same as pre-rotation\n\n            //for each corner of the player ship, check if it is inside the rotated rectangle\n            for(let i = 0; i < 4; i++)\n            {\n                let corn = cornersA[i];\n\n                let x_a = corn[0];\n                let y_a = corn[1];\n                let x_b = cornersB[0][0];\n                let y_b = cornersB[0][1];\n                let x_c = cornersB[1][0];\n                let y_c = cornersB[1][1];\n\n                let tri_1 = Math.abs(x_a * y_b + x_b * y_c + x_c * y_a - x_a * y_c - x_c * y_b - x_b * y_a) / 2;\n                // let tri_1 = Math.abs(x_b * y_a + x_c * y_b + y_c * x_a - x_a * y_b - y_c * x_b - x_c * y_a) / 2;\n                \n\n                x_b = x_c;\n                y_b = y_c;\n                x_c = cornersB[2][0];\n                y_c = cornersB[2][1];\n\n                let tri_2 = Math.abs(x_a * y_b + x_b * y_c + x_c * y_a - x_a * y_c - x_c * y_b - x_b * y_a) / 2;\n                // let tri_2 = Math.abs(x_b * y_a + x_c * y_b + y_c * x_a - x_a * y_b - y_c * x_b - x_c * y_a) / 2;\n\n\n                x_b = x_c;\n                y_b = y_c;\n                x_c = cornersB[3][0];\n                y_c = cornersB[3][1];\n\n                let tri_3 = Math.abs(x_a * y_b + x_b * y_c + x_c * y_a - x_a * y_c - x_c * y_b - x_b * y_a) / 2;\n                // let tri_3 = Math.abs(x_b * y_a + x_c * y_b + y_c * x_a - x_a * y_b - y_c * x_b - x_c * y_a) / 2;\n\n\n                x_b = x_c;\n                y_b = y_c;\n                x_c = cornersB[0][0];\n                y_c = cornersB[0][1];\n\n                let tri_4 = Math.abs(x_a * y_b + x_b * y_c + x_c * y_a - x_a * y_c - x_c * y_b - x_b * y_a) / 2;\n                // let tri_4 = Math.abs(x_b * y_a + x_c * y_b + y_c * x_a - x_a * y_b - y_c * x_b - x_c * y_a) / 2;\n\n                if (tri_1 + tri_2 + tri_3 +tri_4 <= b_area)\n                {\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n\n    normalizedVector(a, b)\n    {\n        let target_x = a.realX();\n        let target_y = a.realY();\n        let distX = target_x - b.realX();\n        let distY = target_y - b.realY();\n\n        length = Math.sqrt(distX * distX + distY * distY);\n        // this.normalVector = [Math.abs(distX) / length, Math.abs(distY) / length];\n        return [distX / length, distY / length];\n    }\n\n    updateUI(ctx)\n    {\n        ctx.fillStyle = '#ff4040';\n        ctx.strokeStyle = \"black\"\n        ctx.textBaseline = 'top';\n        ctx.font = '10pt Verdana';\n        let healthtext = `Health: ${Math.max(Math.floor(this.player.health), 0)} / ${Math.floor(this.player.basehealth)}`;\n        ctx.textAlign = 'left';\n        // const t_width = ctx.measureText(text).width;\n        // const t_height = ctx.measureText(text).height;\n        ctx.fillText(healthtext, 20, this.height - 50);\n\n        ctx.fillStyle = \"#00EFF6\";\n        let shieldtext = `Shield: ${Math.floor(this.player.shield)} / ${Math.floor(this.player.baseshield)}`;\n        ctx.fillText(shieldtext, 20, this.height - 75);\n\n        let goldtext = `Gold: ${Math.floor(this.gold)}`;\n        ctx.textAlign = 'right';\n        ctx.fillStyle = 'gold';\n        ctx.fillText(goldtext, this.width-20, this.height - 50);\n\n\n        // ctx.fillText('this.', this.width-20, this.height - 50);\n        ctx.textAlign = 'start';\n        \n    }\n\n    //need to make sound & explosion\n    handleEnemyDefeat(e_ship)\n    {\n        this.enemiesdefeated++;\n        this.gold += e_ship.gold;\n        let v = e_ship.value;\n\n        if(e_ship.boss) //needs refactoring for bosses besides the first one\n        {\n            this.extras = []; //assuming only boss has extras\n            for(let i = e_ship.dependencies.length - 1; i >= 0; i--)\n            {\n                let shipy = e_ship.dependencies[i];\n                if(shipy instanceof _ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n                {\n                    for(let j = this.enemyships.length - 1; j >= 0; j--) // problematic! need to go backwards\n                    {\n                        if(this.enemyships[j] === shipy)\n                        {\n                            setTimeout(()=> \n                            {\n                                this.enemyships.splice(j, 1);\n                                shipy.health = 0; \n                            }, 0);\n                            \n                        }\n                    }\n                }\n                    \n            }\n        }\n\n\n        if(e_ship.type === 8) //bomb ship\n        {\n            let projs = [];\n            //hardcoding this for no particular reason\n            // let angles = [[0, 1], [.5, Math.sqrt(3)/2.0], [Math.sqrt(3)/2.0, .5], [1, 0], [Math.sqrt(3)/2.0, -.5], [.5, - Math.sqrt(3)/2.0], [-.5, -Math.sqrt(3)/2.0], [-Math.sqrt(3)/2.0, -.5], [-.5, Math.sqrt(3)/2.0], [-Math.sqrt(3)/2.0, .5], [-1, 0], [0,-1]];\n            let angle = 0;\n\n            while(angle < Math.PI * 2)\n            {\n                let x = Math.cos(angle);\n                let y = Math.sin(angle);\n\n                projs.push(new _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_4__[\"default\"]([e_ship.realX(), e_ship.realY()], [5.5 * x, 5.5*y], 4.5, 2, 6, e_ship.damage, 20));\n                angle+= Math.PI/8;\n            }\n            this.enemyprojectiles = this.enemyprojectiles.concat(projs);\n            console.log(this.enemyprojectiles);\n        } \n\n\n        let num = Math.floor(Math.random()*100 * v);\n        //these numbers will change\n        //MAJOR REFACTORING IS NEEDED!!! SCRAP VALUE, HARDCODE DROP %'s BY LEVEL\n\n        // if(num > 140)//ultimate drop\n        // {\n\n        // }\n        // else if(num > 120)//super rare drop\n        // {\n\n        // }\n        // else if(num > 110) //very rare drop\n        // {\n\n        // }\n        if (num > 96.3)// rare drop: missiles,\n        {\n            this.drops.push(new _drop__WEBPACK_IMPORTED_MODULE_3__[\"default\"]([e_ship.posX, e_ship.posY], 3));\n        }\n        else if (num > 65) //uncommon drop: gold, shield, health, missiles\n        {\n            let m = Math.random() * 10;\n            if (m < 2.5)\n                this.drops.push(new _drop__WEBPACK_IMPORTED_MODULE_3__[\"default\"]([e_ship.posX, e_ship.posY], 1));\n            else if (m < 5)\n                this.drops.push(new _drop__WEBPACK_IMPORTED_MODULE_3__[\"default\"]([e_ship.posX, e_ship.posY], 2));\n            else if (m < 7)\n            {\n                this.drops.push(new _drop__WEBPACK_IMPORTED_MODULE_3__[\"default\"]([e_ship.posX, e_ship.posY], 4));\n            }\n            else\n                this.drops.push(new _drop__WEBPACK_IMPORTED_MODULE_3__[\"default\"]([e_ship.posX, e_ship.posY], 0));\n        }\n        else{\n            //no drop\n        }\n\n    }\n\n\n    \n}\n\n\n\n//# sourceURL=webpack:///./src/background.js?");

/***/ }),

/***/ "./src/circleDamageProjectile.js":
/*!***************************************!*\
  !*** ./src/circleDamageProjectile.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CircleDamageProjectile)\n/* harmony export */ });\n/* harmony import */ var _projectile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./projectile */ \"./src/projectile.js\");\n\n\nclass CircleDamageProjectile extends _projectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\n    constructor(position, velocity, radius, owner, type, damage, blur=0, arc_start, arc_end) //owner might be dead code\n    {\n        super(position, velocity, radius, true, owner, type);\n        this.blur = blur;\n        this.damage = damage;\n        this.type = type;\n        if (arc_start === undefined)\n        {\n            this.arc_start = 0;\n        }\n        else\n        {\n            this.arc_start = arc_start;\n        }\n        if (arc_end === undefined)\n            this.arc_end = Math.PI * 2;\n        else\n            this.arc_end = arc_end;\n    }\n\n    draw(context)\n    {\n        function setShadow(ctx, color, ox, oy, blur) {\n            ctx.shadowColor = color;\n            ctx.shadowOffsetX = ox;\n            ctx.shadowOffsetY = oy;\n            ctx.shadowBlur = blur;\n        }\n\n        let gradient_a;\n        let gradient_b;\n        let gradient_c;\n        let mid;\n        let color;\n        if(this.type === 0)\n        {\n            color = \"red\";\n            gradient_a = \"#FF0000\";\n            gradient_b = \"#AD0303\";\n        }\n        else if (this.type === 1)\n        {\n            color = \"pink\";\n            gradient_b = \"#FF4da6\";\n            gradient_a = \"#CC0099\";\n        }\n        else if (this.type === 3)\n        {\n            color = \"cyan\";\n            gradient_a = \"  #b3ffff\";\n            gradient_b = \"#00FFFF\";\n        }\n        else if (this.type === 4)\n        {\n            color = \"purple\";\n            gradient_a = \"#DEA5FF\";\n            gradient_b = \"#6A00A7\";\n        }\n        else if (this.type === 5)\n        {\n            color = \"darkgreen\";\n            gradient_b = \"#00A31A\";\n            gradient_a = \"#78FF54\";\n        }\n        else if (this.type === 6)\n        {\n            color = \"blue\";\n            gradient_a = \"#0019FF\";\n            gradient_b = \"#1121B7\";\n        }\n        else if (this.type === 7)\n        {\n            color = \"blue\";\n            gradient_a = \"white\";\n            gradient_b = \"#1121B7\";\n        }\n\n   \n        context.save();\n        context.beginPath();\n        setShadow(context, color, 0, 0, this.blur);\n        let grd = context.createRadialGradient(this.posX, this.posY, 0, this.posX, this.posY, this.size / 2);\n        if(gradient_c === undefined)\n        {\n            grd.addColorStop(0, gradient_a);\n            grd.addColorStop(1, gradient_b);\n        }\n        else\n        {\n            grd.addColorStop(0, gradient_a);\n            grd.addColorStop(mid, gradient_b);\n            grd.addColorStop(1, gradient_c);\n        }\n        \n        context.fillStyle = grd;\n\n        // if(this.type === 7)\n        // {\n        //     // context.setTransform(1, 0, 0, 1, 150, 150);\n        //     // context.rotate(3 * Math.PI/2);//I hoped this line would rotate it to point downards (so the enemy ship shoots downwards), but it just makes it disappear\n        //     // context.scale(-1,1);\n        //     context.arc(150, 150, 60, (Math.PI/180)*40, (Math.PI/180)*320);\n        //     context.bezierCurveTo(110, 75, 110, 225, 196, 188);\n        // }\n        // else{\n            context.arc(this.posX, this.posY, this.size, this.arc_start, this.arc_end, false);\n        // }\n        context.fill();\n        context.closePath();\n        context.restore();\n\n        context.shadowBlur = 0;\n\n        // context.save();\n        // context.shadowColor = this.color;\n        // context.shadowBlur = 9;\n        // context.fillColor = this.color;\n        // // context.translate(this.posX+this.width/2, this.posY+this.size/2);\n        // // context.rotate(this.degrees*Math.PI/180.0);\n        // // context.translate(-this.posX-this.width/2, -this.posY-this.size/2);\n        // context.fillRect(this.posX, this.posY, 4, 32);\n        // context.restore();\n\n        // context.shadowBlur = 0;\n    }\n\n    leftX()\n    {\n        return this.posX;\n    }\n\n    rightX()\n    {\n        return this.posX + 2 * this.size;\n    }\n\n    upY()\n    {\n        return this.posY;\n    }\n\n    downY()\n    {\n        return this.posY + 2 * this.size;\n    }\n    \n}\n\n//# sourceURL=webpack:///./src/circleDamageProjectile.js?");

/***/ }),

/***/ "./src/drop.js":
/*!*********************!*\
  !*** ./src/drop.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Drop)\n/* harmony export */ });\n/* harmony import */ var _projectile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./projectile */ \"./src/projectile.js\");\n\n\n\nconst TYPES3 = [\n    {\n            //healing\n            img: 'images/heart.png',\n            color: \"red\",\n            blur: 5,\n            scale: .06, \n            rarity: \"common\"\n    },\n    {\n            //double fire\n            img: 'images/drop1.png',\n            color: \"white\",\n            blur: 0,\n            scale: .04, \n            rarity: \"common\"\n    },\n    {\n        img: 'images/gold.png',\n        color: \"gold\",\n        blur: 0,\n        scale: .1, \n        rarity: \"common\"\n    },\n    { \n        //gamma rays\n        img: 'images/gamma.png',\n        color: \"green\",\n        blur: 0,\n        scale: .1, \n        rarity: \"uncommon\"\n    },\n    {   //shield\n        img: 'images/shielddrop.png',\n        color: \"blue\",\n        blur: 0,\n        scale: .15, \n        rarity: \"common\"\n        \n    }\n];\n\nclass Drop extends _projectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(position, type)//color optional\n    {\n        //position, velocity, size, collidable, owner, type)\n\n        super(position, [0, 1.75], 0.25, true, 3, type);\n        const image = new Image();\n        image.src = TYPES3[type].img;\n        image.onload = () => {\n            this.image = image;\n            this.width = image.width * TYPES3[type].scale;\n            this.height = image.height * TYPES3[type].scale;\n        }\n    }\n\n    draw(context)\n    {\n        if(this.image)\n        {\n        // context.shadowColor = this.color;\n        // context.shadowBlur = this.blur;\n            context.save();\n            context.drawImage(this.image, this.posX, this.posY, this.width, this.height);\n            context.restore();\n            \n        }\n    }   \n\n    leftX() //scuffed\n    {\n        return this.posX;\n    }\n\n    rightX() //scuffed\n    {\n        return this.posX + (this.size + this.width) / 2;\n    }\n\n    upY() //scuffed\n    {\n        return this.posY;\n    }\n\n    downY() //scuffed\n    {\n        return this.posY + (this.size + this.width) / 2;\n    }\n\n    outofBounds(width, height)\n    {\n        return (this.posX >= width || this.posY >= height)\n    }\n\n}\n\n\n//# sourceURL=webpack:///./src/drop.js?");

/***/ }),

/***/ "./src/ellipseDamageProjectile.js":
/*!****************************************!*\
  !*** ./src/ellipseDamageProjectile.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EllipseDamageProjectile)\n/* harmony export */ });\n/* harmony import */ var _projectile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./projectile */ \"./src/projectile.js\");\n\n\nclass EllipseDamageProjectile extends _projectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\n    constructor(position, velocity, x_radius, y_radius, type, damage, blur=0) //owner might be dead code\n    {\n        super(position, velocity, y_radius, true, -1, type);\n        this.blur = blur;\n        this.damage = damage;\n        this.type = type;\n        this.x_radius = x_radius;\n        this.y_radius = y_radius;\n    }\n\n    draw(context)\n    {\n        function setShadow(ctx, color, ox, oy, blur) {\n            ctx.shadowColor = color;\n            ctx.shadowOffsetX = ox;\n            ctx.shadowOffsetY = oy;\n            ctx.shadowBlur = blur;\n        }\n\n        let gradient_a;\n        let gradient_b;\n        let gradient_c;\n        let mid;\n        let color;\n        if(this.type === 0)\n        {\n            gradient_a = \"gold\";\n            gradient_b = \"GoldenRod\";\n            gradient_c = \"#DEB300\";\n            mid = 0.9;\n            color = \"#DEB300\";\n        }\n\n   \n        context.save();\n        context.beginPath();\n        setShadow(context, color, 0, 0, this.blur);\n        console.log(\"x\", this.posX);\n        console.log(\"y\", this.posY);\n        console.log(\"rad\", this.y_radius);\n        let grd = context.createRadialGradient(this.posX, this.posY, 0, this.posX, this.posY, this.y_radius);\n        if(gradient_c === undefined)\n        {\n            grd.addColorStop(0, gradient_a);\n            grd.addColorStop(1, gradient_b);\n        }\n        else\n        {\n            grd.addColorStop(0, gradient_a);\n            grd.addColorStop(mid, gradient_b);\n            grd.addColorStop(1, gradient_c);\n        }\n        \n        context.fillStyle = grd;\n\n        context.ellipse(this.posX, this.posY, this.x_radius, this.y_radius, 0, 0, Math.PI*2);\n        context.fill();\n        context.closePath();\n        context.restore();\n\n        context.shadowBlur = 0;\n    }\n\n    leftX()\n    {\n        return this.posX;\n    }\n\n    rightX()\n    {\n        return this.posX + 2 * this.x_radius;\n    }\n\n    upY()\n    {\n        return this.posY;\n    }\n\n    downY()\n    {\n        return this.posY + 2 * this.y_radius;\n    }\n    \n}\n\n\n//# sourceURL=webpack:///./src/ellipseDamageProjectile.js?");

/***/ }),

/***/ "./src/game.js":
/*!*********************!*\
  !*** ./src/game.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Game)\n/* harmony export */ });\n/* harmony import */ var _background__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./background */ \"./src/background.js\");\n/* harmony import */ var _starfield__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./starfield */ \"./src/starfield.js\");\n/* harmony import */ var _tutorial__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tutorial */ \"./src/tutorial.js\");\n// //game.js\n\n\n\n\n\nclass Game\n{\n    constructor(canvas){\n        this.canvas = canvas;\n        this.width = 1280;\n        this.height = 720;\n        this.canvas.width = innerWidth;\n        this.canvas.height = innerHeight;\n        this.context = this.canvas.getContext('2d');\n        this.state = \"new-game\"; //likely dead code\n        this.level = 1;\n        this.bgsong = null;\n        this.ship_level = 1;\n        this.gold = 0;\n\n        this.difficulty = \"easy\"; //REMOVE THIS FOR DEBUGNG PURPOSES ONLY WHILE MAKING TUTORIAL\n\n        this.ships_owned = []; \n        this.all_ships = [\n            {\n                minimum_level: 0,\n                price: -1,\n                ship_id: 0, //or level?\n                stars: 1,\n                skills: 0,\n                model_name: \"RS Fighter\",\n                health_amt: 1,\n                dmg_amt: 1,\n                ship_img: 'images/playership1.png',\n                ship_scale: 0.022\n            },\n            {\n                minimum_level: 1,\n                price: -1, //until tutorial is made\n                ship_id: 1,\n                stars: 2,\n                skills: 1,\n                model_name: \"RS Essence\",\n                health_amt: 2,\n                dmg_amt: 1,\n                ship_img: 'images/playership2.png',\n                ship_scale: 0.022\n                //additional?\n            },\n            {\n                minimum_level: 2,\n                price: 250000,\n                ship_id: 2,\n                stars: 3,\n                skills: 3,\n                model_name: \"RS Vision\",\n                health_amt: 3,\n                dmg_amt: 2,\n                ship_img: 'images/playership3.png',\n                ship_scale: 0.022\n            },\n            {\n                minimum_level: 4,\n                price: 1000000,\n                ship_id: 3,\n                stars: 4,\n                skills: 5,\n                model_name: \"RS Conquest\",\n                health_amt: 4,\n                dmg_amt: 3,\n                ship_img: 'images/playership4.png',\n                ship_scale: 0.022\n            }\n\n        ];\n\n        this.displayed_atm_container = [];\n        this.displayed_atm_id = -1;\n        this.intro_screen();\n\n        // this.loading_screen();\n\n        // this.start();//initially new game every time... loading functionality later\n    }\n\n    playSound(song) {\n        //check if sound is null, if not stop previous sound and unload it\n        if (this.bgsong != null) {\n            // alert(\"6\")\n            this.bgsong.stop();\n            this.bgsong.unload();\n            this.bgsong = null;\n        }\n        this.bgsong = song;\n        this.bgsong.play();\n    }\n\n    intro_screen()\n    {   \n        setTimeout( () => {\n            const loading = document.querySelector(\"#loading\");\n            const intro = document.querySelector(\"#intro-text\");\n            const recommended = document.querySelector(\"#recommended\");\n\n            loading.style.display = \"none\";\n            recommended.style.display = \"none\";\n            intro.style.display = \"flex\";\n        \n            document.body.addEventListener('click', () => {\n                intro.style.display = \"none\";\n                this.playSound(audio.mountainpeak);\n                this.loading_screen();\n            }, {once: true});\n        }, 6000);   \n    }\n\n    tutorial()\n    {\n        let tut = new _tutorial__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.width, this.height, this.context, this.bgsong, this);\n    }\n\n    initiateStart()\n    {\n        audio.beep1.play();   \n       \n\n        if (this.bgsong != null) {\n            this.bgsong.fade(0.2, 0, 6000);\n        }\n\n        let bgsong2 = audio.dawnutopia;\n\n        setTimeout( () => {\n            bgsong2.play();\n            bgsong2.fade(0,0.2, 8000); \n            if(this.bgsong!= null)\n            {\n                // alert('7')\n                this.bgsong.stop();\n            }\n            this.bgsong = bgsong2;\n        }, 8000);\n        \n        \n        this.starField.initiateEnd = true; //necessary for memory and garbage handler issues\n        this.starField = null; //:/ kind of annoying tbh\n\n        setTimeout(()=> \n            {\n                this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n                this.canvas.width = this.width;\n                this.canvas.height = this.height;\n                this.start(this.difficulty);\n            }, 11000);\n    }\n\n    loading_screen()\n    {\n        const loadingscreen = document.querySelectorAll('.mainmenu');\n        const loadingscreenwithoutlogo = document.querySelectorAll('#mainmenu');\n        const difficultyselect = document.querySelector(\"#difficulty-select\");\n        const logo = document.querySelector(\"#logo\");\n        const new_game = document.querySelector('#new-game-butt');\n        const load_game = document.querySelector('#load-game-butt');\n        const howtoplay = document.querySelector('#instructions');\n        const settings = document.querySelector(\"#settings\"); //THIS IS A TEMPORARY THING\n        const socials = document.querySelector(\"#socials-select\")\n        //below temp\n        // const black_screen = document.querySelector(\"#black-screen\");\n        \n        loadingscreen.forEach( (thing) =>{\n            thing.style.display = \"block\";\n        });\n        // const canvaser = document.querySelector('#game-canvas');\n        \n        // load_game.addEventListener(\"click\", ()=> {\n        //     black_screen.style.display = \"block\";\n        // })\n\n        new_game.addEventListener(\"click\", () =>\n        {\n            audio.beep1.play();   \n            loadingscreenwithoutlogo.forEach( (thing) =>{\n                thing.style.display = \"none\";\n            });\n\n            difficultyselect.style.display = \"block\";\n\n            const easy_game = document.querySelector(\"#easy-butt\");\n            const normal_game = document.querySelector(\"#normal-butt\");\n            const hard_game = document.querySelector(\"#hard-butt\");\n            const legendary_game = document.querySelector(\"#legendary-butt\");\n\n\n            easy_game.addEventListener(\"click\", () => {\n                difficultyselect.style.display = \"none\";//non-DRY but w/e\n                logo.style.display = \"none\";\n                this.difficulty = \"easy\";\n                this.initiateStart();\n            })\n\n            normal_game.addEventListener(\"click\", () => {\n                difficultyselect.style.display = \"none\";\n                logo.style.display = \"none\";\n                this.difficulty = \"normal\";\n                this.initiateStart();\n            })\n\n            hard_game.addEventListener(\"click\", () => {\n                difficultyselect.style.display = \"none\";\n                logo.style.display = \"none\";\n                this.difficulty = \"hard\";\n                this.initiateStart();\n            })\n\n            legendary_game.addEventListener(\"click\", () => {\n                difficultyselect.style.display = \"none\";\n                logo.style.display = \"none\";\n                this.difficulty = \"legendary\";\n                this.initiateStart();\n            })\n            \n        });\n\n        load_game.addEventListener(\"click\", () => {\n            this.tutorial();\n        })\n\n        settings.addEventListener(\"click\", () => {\n            audio.beep1.play();\n\n            loadingscreenwithoutlogo.forEach( (thing) =>{\n                thing.style.display = \"none\";\n            });\n\n            socials.style.display = \"block\";\n            //below does not work\n            // socials.forEach( (thing) =>{\n            //     thing.addEventListener(\"click\", () => {\n            //         socials.style.display = \"none\";\n            //         this.loading_screen();\n            //         alert(\"!\");\n            //     }, {once: true})\n            // });\n        })\n\n        if(!this.starField) \n            this.starField = new _starfield__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.canvas, this.canvas.width, this.canvas.height);\n\n        howtoplay.addEventListener(\"click\", () =>\n        {\n            audio.beep1.play();\n            loadingscreen.forEach( (thing) =>{\n                thing.style.display = \"none\";\n            });\n\n            this.starField.instructionsOn = true;\n            \n\n            function exitInstructions()\n            {\n                loadingscreen.forEach( (thing) =>{\n                    thing.style.display = \"inline-block\";\n                });\n                this.starField.instructionsOn = false;\n                audio.beep1.play();\n            }\n            \n            setTimeout(()=> \n            {\n                document.addEventListener(\"click\", exitInstructions.bind(this), {once: true});\n            }, 100);\n    \n        });\n    }\n    \n\n    start(difficulty)\n    {\n        // let canvas = document.getElementById('game-canvas');\n        // let context = canvas.getContext('2d');\n\n        const my_shop = document.querySelector(\"#shop\");\n        const ships = document.querySelector(\"#ships\");\n\n        const nextship1 = document.querySelector(\"#nextship\");\n        const nextship2 = document.querySelector(\"#nextship2\");\n        const bought = document.querySelector(\"#bought\");\n\n        const next_level = document.querySelector(\"#nextlevel\");\n        const buy = document.querySelector(\"#buy\");\n        my_shop.style.display = \"none\";\n        next_level.style.display = \"none\";\n\n        if(this.background)//trying to fix double sound issue... thus far not working and not sure why\n        {\n            \n        }\n\n        if(this.level === 2)\n        {\n            this.playSound(audio.orbit);\n            if(this.bgsong)\n            {\n                this.bgsong.fade(0,0.2, 6000); \n            }\n        }\n\n        this.context = this.canvas.getContext('2d');\n        this.background = new _background__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.width, this.height, this.level, this.context, this.bgsong, this.gold, this.ship_level, this, difficulty);\n        this.state = \"fighting\";\n        this.background.animate();\n        \n        // for now the game just instantly plays the \"level\" which is currently misnamed as background\n        // this.animate();\n    }\n\n    displayCurrentShip()\n        {\n            let info = this.all_ships[this.displayed_atm_id];\n            console.log(\"info:\", info);\n\n            const leftside = document.getElementById(\"ships-leftside-text\");\n            leftside.style.display = \"flex\";\n            this.displayed_atm_container.push(leftside);\n\n            let health_img;\n            switch(info.health_amt)\n            {\n                case 1:\n                    health_img = document.querySelector(\"#hp1\");\n                    break;\n                case 2:\n                    health_img = document.querySelector(\"#hp2\");\n                    break;\n                case 3:\n                    health_img = document.querySelector(\"#hp3\");\n                    break;\n                case 4:\n                    health_img = document.querySelector(\"#hp4\");\n                    break;\n                case 5:\n                    health_img = document.querySelector(\"#hp5\");\n                    break;\n                //higher cases... secret ships?\n                default:\n                    break;\n            }\n            health_img.style.display = \"flex\";\n            this.displayed_atm_container.push(health_img);\n\n            //ship name\n\n            const model_name = document.getElementById(\"model-name-text\");\n            model_name.innerHTML = info.model_name;\n\n            const model_name_container = document.querySelector(\"#model-name\");\n            model_name_container.style.display = \"flex\";\n            this.displayed_atm_container.push(model_name_container);\n\n\n            let stars_img;\n            switch(info.stars)\n            {\n                case 1:\n                    stars_img = document.querySelector(\"#one-star\");\n                    break;\n                case 2:\n                    stars_img = document.querySelector(\"#two-stars\");\n                    break;\n                case 3:\n                    stars_img = document.querySelector(\"#three-stars\");\n                    break;\n                case 4:\n                    stars_img = document.querySelector(\"#four-stars\");\n                    break;\n                //higher cases when needed\n                default:\n                    break;\n            }\n            stars_img.style.display = \"flex\";\n            this.displayed_atm_container.push(stars_img);\n\n            \n            const skills_number = document.getElementById(\"skills-number-text\");\n            skills_number.innerHTML = info.skills;\n\n            const skills_number_container = document.querySelector(\"#skills-number\");\n            skills_number_container.style.display = \"flex\";\n            this.displayed_atm_container.push(skills_number_container);\n\n\n            let damage_img;\n            switch(info.dmg_amt)\n            {\n                case 1:\n                    damage_img = document.querySelector(\"#dmg1\");\n                    break;\n                case 2:\n                    damage_img = document.querySelector(\"#dmg2\");\n                    break;\n                case 3:\n                    damage_img = document.querySelector(\"#dmg3\");\n                    break;\n                case 4:\n                    damage_img = document.querySelector(\"#dmg4\");\n                    break;\n                case 5:\n                    damage_img = document.querySelector(\"#dmg5\");\n                    break;\n                //higher cases... secret ships?\n                default:\n                    break;\n            }\n            damage_img.style.display = \"flex\";\n            this.displayed_atm_container.push(damage_img);\n\n\n            let ship_img;\n            switch(info.ship_id)\n            {\n                case 0: \n                    ship_img = document.querySelector(\"#shippie1\");\n                    break;\n                case 1:\n                    ship_img = document.querySelector(\"#shippie2\");\n                    break;\n                case 2:\n                    ship_img = document.querySelector(\"#shippie3\");\n                    break;\n                case 3:\n                    ship_img = document.querySelector(\"#shippie4\");\n                    break;\n                //higher cases... secret ships?\n                default:\n                    break;\n            }\n            ship_img.style.display = \"flex\";\n            this.displayed_atm_container.push(ship_img);\n\n            let the_big_button;\n            if(info.minimum_level > this.level)\n            {\n                the_big_button = document.querySelector(\"#locked\");\n            }\n            else if(info.price === -1 && this.displayed_atm_id === this.ship_level)\n            {\n                the_big_button = document.querySelector(\"#chosen-ship\");\n            }\n            else if(info.price === -1)\n            {\n                the_big_button = document.querySelector(\"#select-ship\");\n                the_big_button.addEventListener(\"click\", ()=>{\n                    this.ship_level = this.displayed_atm_id;\n                    const chosen = document.querySelector(\"#chosen-ship\");\n                    chosen.style.display = \"flex\";\n                    this.displayed_atm_container.push(chosen);\n                    the_big_button.style.display = \"none\";\n                    audio.buyship.play();\n                    //can techncially remove big button but w/e\n                }, {once: true})\n            }\n            else\n            {\n                the_big_button = document.querySelector(\"#priced-ship\");\n                the_big_button.addEventListener(\"click\", ()=>{\n                    if(this.gold >= info.price)\n                    {\n                        this.gold -= info.price;\n                        audio.buyship.play();\n                        this.all_ships[this.displayed_atm_id].price = -1;\n                        this.ship_level = this.displayed_atm_id;\n                        const chosen = document.querySelector(\"#chosen-ship\");\n                        chosen.style.display = \"flex\";\n                        this.displayed_atm_container.push(chosen);\n                        the_big_button.style.display = \"none\";\n                    }\n                    //can techncially remove big button but w/e\n                }, {once: true})\n            }\n\n            the_big_button.style.display = \"flex\";\n            this.displayed_atm_container.push(the_big_button);\n    }\n\n    nextShip()\n    {\n        if(this.displayed_atm_id < this.all_ships.length - 1)\n        {\n            audio.beep1.play();\n            console.log(this.displayed_atm_container, \"hello?\");\n            this.displayed_atm_container.forEach((ele) => {\n                ele.style.display = \"none\";\n            });\n            this.displayed_atm_container = [];\n            this.displayed_atm_id++;\n            this.displayCurrentShip();\n        }\n        else\n        {\n            audio.beep2.play();\n        }\n    }\n\n    prevShip()\n    {\n        if(this.displayed_atm_id >= 1)\n        {\n            audio.beep1.play();\n            this.displayed_atm_container.forEach((ele) => {\n                ele.style.display = \"none\";\n            });\n            this.displayed_atm_container = [];\n            this.displayed_atm_id--;\n            this.displayCurrentShip();\n        }\n        else\n        {\n            audio.beep2.play();\n        }\n    }\n\n    endLevel()\n    {\n        const my_shop = document.querySelector(\"#shop\");\n        const ships = document.querySelector(\"#ships\");\n        const shipselect = document.querySelector(\"#shipselect\");\n        const nextship = document.querySelector(\"#nextship\");\n        const bought = document.querySelector(\"#bought\");\n\n        const next_level = document.querySelector(\"#nextlevel\");\n\n        const buy = document.querySelector(\"#buy\");\n\n        this.background.bgsong.stop();\n        this.gold = this.background.gold;\n        this.ship_level = this.background.ship_level;\n        this.level++;\n\n        // this.background = null;\n        //will need an object with all owned stats and purchased things when we get there to extract from background\n\n        this.bgsong = audio.shopmusic;\n        this.bgsong.play();\n\n        my_shop.style.display = \"flex\";\n\n        function enterShips()\n        {\n            my_shop.style.display = \"none\";\n            audio.beep1.play();\n            // shipselect1.style.display = \"flex\"; \n            shipselect.style.display = \"flex\";  \n            // bought.style.display = \"flex\";\n            next_level.style.display = \"flex\"; //this is in the wrong place for sure!!!!!!!!!!!!!!!!\n            next_level.addEventListener(\"click\", () => {\n                this.displayed_atm_container.forEach((ele) => {\n                    ele.style.display = \"none\";\n                });\n                shipselect.style.display = \"none\";  \n                next_level.style.display = \"none\";\n                if(this.bgsong!= null)\n                {\n                    this.bgsong.stop();\n                }\n\n                this.displayed_atm_container = [];\n                this.start(this.difficulty);\n            }\n            , {once: true});\n            this.displayed_atm_id = this.ship_level;\n            this.displayCurrentShip();\n\n            nextship.addEventListener(\"click\", this.nextShip.bind(this));\n            prevship.addEventListener(\"click\", this.prevShip.bind(this));           \n        }\n        \n        setTimeout(()=> \n        {\n            ships.addEventListener(\"click\", enterShips.bind(this), {once: true});\n        }, 100);\n        \n        // //need a hashmap for level's bgsong\n        // this.background= new Background(this.width, this.height, this.level, this.context, this.bgsong, this.gold, this.ship_level, this);\n    }\n   \n}\n\n\n//# sourceURL=webpack:///./src/game.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/game.js\");\n\n//index.js\n\n\ndocument.addEventListener('DOMContentLoaded', function(event) {\n    console.log('DOM fully loaded and parsed');\n    const canvas = document.getElementById('game-canvas');\n    const gam = new _game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas);\n});\n\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/laserDamageProjectile.js":
/*!**************************************!*\
  !*** ./src/laserDamageProjectile.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LaserDamageProjectile)\n/* harmony export */ });\n/* harmony import */ var _projectile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./projectile */ \"./src/projectile.js\");\n\n\nclass LaserDamageProjectile extends _projectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\n    constructor(position, velocity, angle, length, owner, type, damage, blur=0, width=2, img)\n    {\n        super(position, velocity, length, true, owner, type);\n        this.blur = blur;\n        this.damage = damage;\n        this.width = width;\n        this.degrees = angle;\n \n        \n        this.isImage = false; //not good code... might need to refactor into separate class if troublesome\n        if(img != undefined)\n        {\n            this.isImage = true;\n            let scale;\n            if (type === 3)\n            {\n                scale = 0.1;\n            }\n            else if(type === 4)\n            {\n                scale = 0.19;\n            }\n\n            const image = new Image();\n            image.src  = img;\n            image.onload = () => {\n                this.image = image;\n                this.width = image.width * scale;\n                this.size = image.height * scale;\n                \n            }\n        }       \n    }\n\n    draw(context)\n    {\n        function setShadow(ctx, color, ox, oy, blur) {\n            ctx.shadowColor = color;\n            ctx.shadowOffsetX = ox;\n            ctx.shadowOffsetY = oy;\n            ctx.shadowBlur = blur;\n        }\n\n        let color;\n        if(this.type === 0)\n        {\n            color = \"red\";\n        }\n        else if(this.type === 2)\n        {\n            color = \"#DDB300\";\n        }\n        else if (this.type === 3)\n        {\n            color = \"#39FF14\";\n        }\n        else if (this.type === 4)\n        {\n            color = \"Green\";\n        }\n        else if (this.type === 5)\n        {\n            color = \"blue\";\n        }\n    \n        context.save();\n        context.shadowColor = color;\n        setShadow(context, color, 0, 0, this.blur);\n        context.fillStyle = color;\n\n        if(!this.isImage)\n        {\n            context.translate(this.posX+this.width/2, this.posY+this.size/2);\n            context.rotate(this.degrees*Math.PI/180.0);\n            context.translate(-this.posX-this.width/2, -this.posY-this.size/2);\n            context.fillRect(this.posX, this.posY, this.width, this.size);\n        }\n        else\n        {\n            if (this.image)\n            {\n                if(this.type === 3)\n                {\n                    context.translate(this.posX, this.posY);\n                    context.rotate(this.degrees*Math.PI/180.0);\n                    context.drawImage(this.image, - this.width / 2, - this.size / 2, this.width, this.size);\n                }\n                else\n                {\n                    context.translate(this.posX+this.width/2, this.posY+this.size/2);\n                    context.rotate(this.degrees*Math.PI/180.0);\n                    context.translate(-this.posX-this.width/2, -this.posY-this.size/2);\n                    context.drawImage(this.image, this.posX, this.posY, this.width, this.size);\n                }\n            }\n        }\n        context.restore();\n\n        context.shadowBlur = 0;\n    }\n\n    leftX()\n    {\n        if(this.type === 3)\n        {\n            return this.posX + this.width * .25\n        } \n        return this.posX\n    }\n\n    rightX()\n    {\n        if(this.type === 3)\n        {\n            return this.posX + this.width * .75\n        } \n        return this.posX + this.width\n    }\n\n    upY()\n    {\n        if(this.type === 3)\n        {\n            return this.posY + this.size * .2\n        } \n        return this.posY\n    }\n\n    downY()\n    {\n        if(this.type === 3)\n        {\n            return this.posY + this.size * .8\n        } \n        return this.posY + this.size;\n    }\n    \n}\n\n//# sourceURL=webpack:///./src/laserDamageProjectile.js?");

/***/ }),

/***/ "./src/laserbeam.js":
/*!**************************!*\
  !*** ./src/laserbeam.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LaserBeam)\n/* harmony export */ });\n\n//projectile.js\n//just pass context around into draw and animate specifically\n\n//BE AWARE LASER IS INACCURATE AND ASSUMES FULL MAP ACCESS\n//If want limited length laserbeam, minor refactoring is needed\n\nclass LaserBeam {\n    constructor(position, velocity, length, width, damage, type, duration, angle)//null optional\n    {\n        this.posX = position[0];\n        this.posY = position[1];\n        this.velX = velocity[0];\n        this.velY = velocity[1];\n        this.length = length;\n        this.width = width;\n        this.type = type;\n        this.damage = damage;\n        this.duration = duration;\n        this.angle = angle;\n    }\n\n    draw(context)\n    {\n        function setShadow(ctx, color, ox, oy, blur) {\n            ctx.shadowColor = color;\n            ctx.shadowOffsetX = ox;\n            ctx.shadowOffsetY = oy;\n            ctx.shadowBlur = blur;\n        }\n\n        let color;\n        if(this.type === 0)\n        {\n            color = \"red\";\n        }\n    \n        context.save();\n        \n    \n        setShadow(context, color, 0, 0, 40);\n        let grd = context.createLinearGradient(this.posX, this.posY, this.posX - this.width / 2, this.posY);\n        grd.addColorStop(0, '#DE4040');\n        grd.addColorStop(0.6, \"red\")\n        grd.addColorStop(1, '#760C0C');\n\n\n        context.fillStyle = grd;\n        context.fillRect(this.posX - this.width / 2, this.posY, this.width/2 + 1, this.length);\n\n        let grd2 = context.createLinearGradient(this.posX, this.posY, this.posX + this.width / 2, this.posY);\n        \n        grd2.addColorStop(0, '#DE4040');\n        grd2.addColorStop(0.6, \"red\")\n        grd2.addColorStop(1, '#760C0C');\n        context.fillStyle = grd2;\n\n        context.fillRect(this.posX, this.posY, this.width/2, this.length);\n        context.shadowBlur = 0;\n        \n        context.restore();\n    }\n\n    animate(context)\n    {\n        this.duration -= 1;\n        this.move();\n        this.draw(context);\n    }\n\n    move() //should be manually moved by the ship it belongs to\n    {\n        // this.posX += this.velX;\n        // this.posY += this.velY;\n    }\n    \n    // outofBounds(width, height)\n    // {\n    //     return (this.posX < 0 || this.posY < 0 || this.posX >= width || this.posY >= height)\n    // }\n\n    outofBounds(width, height)\n    {\n        return false;\n    }\n\n    leftX()\n    {\n        return this.posX;\n    }\n\n    rightX()\n    {\n        return this.posX + this.width;\n    }\n\n    upY()\n    {\n        return 0;\n    }\n\n    downY()\n    {\n        return this.length;\n    }\n\n}\n\n\n//# sourceURL=webpack:///./src/laserbeam.js?");

/***/ }),

/***/ "./src/lensflare.js":
/*!**************************!*\
  !*** ./src/lensflare.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LensFlare)\n/* harmony export */ });\n//projectile.js\n//just pass context around into draw and animate specifically\n\nclass LensFlare {\n    constructor(position, duration, img_src, scale, color, blur)\n    {\n        this.posX = position[0];\n        this.posY = position[1];\n        this.duration = duration;\n        this.scale = scale;\n        this.color = color;\n        this.blur = blur;\n\n        const image = new Image();\n        image.src = img_src;\n        image.onload = () => {\n            this.image = image;\n            this.width = image.width * this.scale;\n            this.height = image.height * this.scale;\n        }\n    }\n\n    draw(context)\n    {\n        context.shadowColor = this.color;\n        context.shadowBlur = this.blur;\n        if (this.image)\n            context.drawImage(this.image, this.posX - this.width / 2, this.posY - this.width / 2, this.width, this.height);\n        \n        context.fillRect(this.posX, this.posY, this.width/2, this.length);\n        context.shadowBlur = 0;\n    }\n\n    animate(context)\n    {\n        this.duration -= 1;\n        this.draw(context);\n    }\n\n    outofBounds(width, height)\n    {\n        return false;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/lensflare.js?");

/***/ }),

/***/ "./src/orbDamageProjectile.js":
/*!************************************!*\
  !*** ./src/orbDamageProjectile.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ OrbDamageProjectile)\n/* harmony export */ });\n/* harmony import */ var _projectile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./projectile */ \"./src/projectile.js\");\n\n\nclass OrbDamageProjectile extends _projectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\n    constructor(position, velocity, radius, type, damage, blur=0) //owner might be dead code\n    {\n        super(position, velocity, radius, true, -1, type); //owner dead code\n        this.blur = blur;\n        this.damage = damage;\n        this.type = type;\n        this.stage = -1;\n        this.timer = 0;\n    }\n\n    move() //default move, no acceleration. projectiles, stars, some enemy ships, drops, etc.\n    {\n        this.posX += this.velX;\n        this.posY += this.velY;\n        this.timer++;\n\n        if(this.stage === -1)\n        {\n            if(this.posY < 287)\n            {\n                this.stage = 0;\n            }\n            else if (this.posY > 293)\n            {\n                this.velY = -1 * this.velY;\n                this.stage = 0;\n            }\n            else if (this.posY < 289){\n                this.velY = 1;\n                this.stage = 1;\n            }\n            else if (this.posY > 291){\n                this.velY = -1;\n                this.stage = 1;\n            }\n            else{\n                this.velY = 0;\n                this.velX = 0;\n                this.stage = 2;\n            }\n        }\n\n        if(this.stage === 0 && this.posY >= 230 && this.posY < 287)\n        {\n            this.velX *= .9;\n            this.velY *= .95;\n            if(this.velY < 0.2)\n            {\n                this.velY = 0.2;\n            }\n        }\n        else if(this.stage === 0 && this.posY >= 287 && this.posY <= 289)\n        {\n            this.velY = 1;\n            this.stage = 1;\n        }\n        else if(this.stage === 0 && this.posY >= 291 && this.posY <= 293)\n        {\n            this.velY = -1;\n            this.stage = 1;\n        }\n        else if (this.stage === 0 && this.posY > 293 && this.posY < 340)\n        {\n            this.velX *= .9;\n            this.velY *= .95;\n\n            if(this.velY > -0.2)\n            {\n                this.velY = -0.2;\n            }\n        }\n        else if (this.stage === 1 && this.posY >= 289 && this.posY <= 291)\n        {\n            this.stage = 2;\n            this.velY = 0;\n        }\n        else if (this.stage === 2 && this.timer >= 120)\n        {\n            this.stage = 3;\n            this.velX = 0;\n            this.velY = 10;\n        }\n    }\n\n    draw(context)\n    {\n        function setShadow(ctx, color, ox, oy, blur) {\n            ctx.shadowColor = color;\n            ctx.shadowOffsetX = ox;\n            ctx.shadowOffsetY = oy;\n            ctx.shadowBlur = blur;\n        }\n\n        let gradient_a;\n        let gradient_b;\n        let gradient_c;\n        let mid;\n        let color;\n        if (this.type === 0)\n        {\n            color = \"blue\";\n            gradient_a = \"white\";\n            gradient_b = \"blue\";\n            gradient_c = \"#0e1d9e\"\n            mid = 0.3\n        }\n\n   \n        context.save();\n        context.beginPath();\n        setShadow(context, color, 0, 0, this.blur);\n        let grd = context.createRadialGradient(this.posX, this.posY, 0, this.posX, this.posY, this.size / 2);\n        if(gradient_c === undefined)\n        {\n            grd.addColorStop(0, gradient_a);\n            grd.addColorStop(1, gradient_b);\n        }\n        else\n        {\n            grd.addColorStop(0, gradient_a);\n            grd.addColorStop(mid, gradient_b);\n            grd.addColorStop(1, gradient_c);\n        }\n        \n        context.fillStyle = grd;\n\n        // if(this.type === 7)\n        // {\n        //     // context.setTransform(1, 0, 0, 1, 150, 150);\n        //     // context.rotate(3 * Math.PI/2);//I hoped this line would rotate it to point downards (so the enemy ship shoots downwards), but it just makes it disappear\n        //     // context.scale(-1,1);\n        //     context.arc(150, 150, 60, (Math.PI/180)*40, (Math.PI/180)*320);\n        //     context.bezierCurveTo(110, 75, 110, 225, 196, 188);\n        // }\n        // else{\n            context.arc(this.posX, this.posY, this.size, 0, Math.PI * 2, false);\n        // }\n        context.fill();\n        context.closePath();\n        context.restore();\n\n        context.shadowBlur = 0;\n\n        // context.save();\n        // context.shadowColor = this.color;\n        // context.shadowBlur = 9;\n        // context.fillColor = this.color;\n        // // context.translate(this.posX+this.width/2, this.posY+this.size/2);\n        // // context.rotate(this.degrees*Math.PI/180.0);\n        // // context.translate(-this.posX-this.width/2, -this.posY-this.size/2);\n        // context.fillRect(this.posX, this.posY, 4, 32);\n        // context.restore();\n\n        // context.shadowBlur = 0;\n    }\n\n    leftX()\n    {\n        return this.posX;\n    }\n\n    rightX()\n    {\n        return this.posX + 2 * this.size;\n    }\n\n    upY()\n    {\n        return this.posY;\n    }\n\n    downY()\n    {\n        return this.posY + 2 * this.size;\n    }\n    \n}\n\n//# sourceURL=webpack:///./src/orbDamageProjectile.js?");

/***/ }),

/***/ "./src/player.js":
/*!***********************!*\
  !*** ./src/player.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Player)\n/* harmony export */ });\n/* harmony import */ var _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./circleDamageProjectile */ \"./src/circleDamageProjectile.js\");\n/* harmony import */ var _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./laserDamageProjectile */ \"./src/laserDamageProjectile.js\");\nlet SAFEFRAMES = 5;\n\n\n\n\n\nconst TYPES2 = [\n    { \n        //Basic Player Ship\n        basehealth: 600,\n        basedamage: 30,\n        baseshield: 300,\n        img: 'images/playership1.png',\n        scale: .0185, \n        defaultprojType: 0,\n        regen: 0.1\n    },\n    {\n            //Level 2 Ship\n            basehealth: 1000,\n            basedamage: 40,\n            baseshield: 500,\n            img: 'images/playership2.png',\n            scale: .0185, \n            defaultprojType: 0, \n            regen: 0.2\n    },\n    {\n            //Level 3 Ship\n            basehealth: 2000,\n            basedamage: 50,\n            baseshield: 750,\n            img: 'images/playership3.png',\n            scale: .017, \n            defaultprojType: 1, \n            regen: 0.3\n    }\n\n]\nclass Player {\n    constructor(position, ship_level = 0) //more later, type?\n    {\n        this.posX = position[0];\n        this.posY = position[1];\n        this.velX = 0;\n        this.velY = 0;\n\n        this.canvasX = this.posX * 2;\n        this.canvasY = this.posY + 50;\n        this.ship_level = ship_level;\n\n        const image = new Image();\n        image.src  = TYPES2[this.ship_level].img;\n        image.onload = () => {\n            this.image = image;\n            const SCALE = TYPES2[this.ship_level].scale;\n            this.width = image.width * SCALE;\n            this.height = image.height * SCALE;\n        }\n        this.basehealth = TYPES2[this.ship_level].basehealth;\n        this.health = this.basehealth; \n        this.baseshield = TYPES2[this.ship_level].baseshield;\n        this.shield = this.baseshield;\n        this.basedamage = TYPES2[this.ship_level].basedamage;\n        this.regen = TYPES2[this.ship_level].regen;\n\n        this.movedX = 0;\n        this.movedY = 0;\n        this.degrees = 0;\n        // this.initialThrottleY = 0;\n\n        // this.color = \"red\";\n        this.normalVector = [0,-1];\n        this.projectileType = TYPES2[this.ship_level].defaultprojType;\n        this.shotsLeft = 0;\n        this.shootTimer = 0;\n\n        this.collided = 0;\n        this.interval = 1; //multi-purpose for variying shots\n        this.dead = false;\n    }\n\n    draw(context, mouse_x, mouse_y)\n    {\n        if (!this.dead && this.image)\n        {\n            this.updateAngleAndNormalizedVector(mouse_x, mouse_y);\n\n\n            context.save();\n            context.shadowColor = \"red\";\n            if(this.shield >0 )\n            {\n                context.shadowBlur = 15;\n            }\n            else\n            {\n                context.shadowBlur = 5;\n            }\n            context.translate(this.posX+this.width/2, this.posY+this.height/2);\n            context.rotate(this.degrees*Math.PI/180.0);\n            context.translate(-this.posX-this.width/2, -this.posY-this.height/2);\n            context.drawImage(this.image, this.posX, this.posY, this.width, this.height);\n            context.restore();\n            context.shadowBlur = 0;\n        }\n\n\n    }\n\n    animate(context, mouse_x, mouse_y)\n    {\n        //BINDING KEYS DOES NOT WORK\n        //It creates a lag between whether it determines a key is being tapped or held (~1 second)\n        //which makes movement very, very slow and clunky\n        //so have to do it this way instead. Neither keymaster.js's bind nor built-in events work\n\n        console.log(\"PLAYERPOS\", this.posX, this.posY);\n        if(this.health < this.basehealth)\n        {\n            this.health += this.regen;\n        }\n\n        if(this.collided <= 0)\n        {\n            if(key.isPressed(\"up\") || key.isPressed(\"w\"))\n            {\n\n                this.power(\"up\");\n            }\n            if(key.isPressed(\"right\") || key.isPressed(\"d\"))\n            {\n                this.power(\"right\");\n            }\n            if(key.isPressed(\"down\")|| key.isPressed(\"s\"))\n            {\n                this.power(\"down\");\n            }\n            if(key.isPressed(\"left\")|| key.isPressed(\"a\"))\n            {\n                this.power(\"left\");\n            }\n        }\n        else\n        {\n            this.collided -= 1;\n        }\n        \n        this.move();\n        this.applyGravity();\n        if(mouse_x === -1 && this.mouse_y === -1)\n            this.draw(context, this.posX, 0);\n        else \n            this.draw(context, mouse_x, mouse_y);\n    }\n\n    move()\n    {\n        this.posX += this.velX;\n        if(this.posX<50)\n        {\n            this.posX = 50;\n        }\n        if(this.posX>this.canvasX - 50)\n        {\n            this.posX = this.canvasX - 50;\n        }\n        this.posY += this.velY;\n        if(this.posY<50)\n        {\n            this.posY = 50;\n        }\n        if(this.posY>this.canvasY - 50)\n        {\n            this.posY = this.canvasY - 50;\n        }\n    }\n\n    levelup(level)\n    {\n        if (this.ship_level >= level)\n        {\n            return;\n        }\n        this.ship_level = level;\n        this.projectileType = TYPES2[level].defaultprojType;\n        \n        if (level === 1)\n        {\n            const image = new Image();\n            image.src  = TYPES2[level].img;\n            image.onload = () => {\n                this.image = image;\n                const SCALE = 0.02;\n                this.width = image.width * SCALE;\n                this.height = image.height * SCALE;\n            }\n        } \n        this.basehealth = TYPES2[level].basehealth;\n        this.health = this.basehealth;\n        this.basedamage = TYPES2[level].basedamage;\n        this.baseshield =  TYPES2[level].baseshield;\n        this.shield = this.baseshield;\n    }\n\n    power(direction)\n    {\n        const MAXSPEED = 10;\n        const MINSPEED = MAXSPEED * -1; //can also use Math.abs()\n        switch(direction)\n        {\n            case \"up\":\n                if(this.velY>-4)\n                {\n                    this.velY = -4;\n                }\n                else\n                {\n                this.velY -= 0.45;\n                }\n                if(this.velY < MINSPEED)\n                {\n                    this.velY = MINSPEED;\n                }\n                this.movedY = SAFEFRAMES;\n                break;\n            case \"down\":\n                if(this.velY<4)\n                {\n                    this.velY = 4;\n                }\n                else\n                {\n                    this.velY += 0.45;\n                }\n                if(this.velY > MAXSPEED)\n                {\n                    this.velY = MAXSPEED;\n                }\n                this.movedY = SAFEFRAMES;\n                break;\n            case \"right\":\n                if(this.velX<4)\n                {\n                    this.velX = 4;\n                }\n                else\n                {\n                this.velX += 0.45;\n                }\n                if(this.velX > MAXSPEED)\n                {\n                    this.velX = MAXSPEED;\n                }\n                this.movedX = SAFEFRAMES;\n                break;\n            case \"left\":\n                if(this.velX>-4)\n                {\n                    this.velX = -4;\n                }\n                else\n                {\n                this.velX -= 0.45;\n                }\n                if(this.velX < MINSPEED)\n                {\n                    this.velX = MINSPEED;\n                }\n                this.movedX = SAFEFRAMES;\n                break;\n        }\n    }\n    \n    applyGravity()\n    {\n        if(this.movedX <= 0)\n        {\n            let x = Math.abs(this.velX);\n            if (x < 0.7)\n            {\n                this.velX = 0;\n            }\n            else if (x < 1.3)\n            {\n                this.velX = this.velX * 0.4;\n            }\n            else if (x < 2.5)\n            {\n                this.velX = this.velX * 0.6;\n            }\n            else if (x < 5)\n            {\n                this.velX = this.velX * 0.7;\n            }\n            else\n            {\n                this.velX = this.velX * 0.8;\n            }\n\n        }\n        else\n        {\n            this.movedX -= 1;\n        }\n        if(this.movedY <= 0)\n        {\n            let y = Math.abs(this.velY);\n            if (y < 0.7)\n            {\n                this.velY = 0;\n            }\n            else if (y < 1.3)\n            {\n                this.velY = this.velY * 0.4;\n            }\n            else if (y < 2.5)\n            {\n                this.velY = this.velY * 0.6;\n            }\n            else if (y < 5)\n            {\n                this.velY = this.velY * 0.7;\n            }\n            else\n            {\n                this.velY = this.velY * 0.8;\n            }\n        }\n        else\n        {\n            this.movedY -= 1;\n        }\n    }\n\n    shootProjectile(mouse_x, mouse_y)\n    {\n        let type = this.projectileType;\n        let mx;\n        let my;\n        if(mouse_x === -1 && mouse_y === -1)\n        {\n            mx = this.realX();\n            my = 0;\n        }\n        else\n        {\n            mx = mouse_x;\n            my = mouse_y;\n        }\n        this.updateAngleAndNormalizedVector(mouse_x, mouse_y);\n        let speed;\n        let cooldown;\n\n        switch(type)\n        {\n            case -1:\n                this.shootTimer -= 1;\n                return undefined;\n                break;\n            case 0: //red ball center\n                speed = 12;\n                cooldown = 8;\n                if(this.shootTimer <= 0)\n                {\n                    \n                    let projs = [];\n                    this.shootTimer = cooldown;\n                    let offset_x = 17;\n                    let offset_y = -30;// defaults for level === 1\n                    if (this.interval === 1)\n                    {\n                    \n                        let rotate_scaler = this.offset(offset_x, offset_y);\n                        projs.push(new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + rotate_scaler[0], this.realY() + rotate_scaler[1]], [speed * this.normalVector[0], speed*this.normalVector[1]], this.degrees, 20, 1, 0, this.basedamage, 4));\n                        this.interval = 0;\n                    }\n                    else if (this.interval === 0)\n                    {\n                        \n                        let rotate_scaler2 = this.offset(offset_x * -1, offset_y);\n                        projs.push(new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + rotate_scaler2[0], this.realY() + rotate_scaler2[1]], [speed * this.normalVector[0], speed*this.normalVector[1]], this.degrees, 20, 1, 0, this.basedamage, 4));\n                        this.interval = 1;\n                    }\n                    return projs;\n                }\n                else\n                {\n                    this.shootTimer -= 1;\n                    return undefined;\n                }\n            case 1: //basic lasers double\n               \n                speed = 12;\n                cooldown = 12;\n                if(this.shootTimer <= 0)\n                {\n                   \n                    let projs = [];\n                    this.shootTimer = cooldown;\n                    let offset_x = 17;\n                    let offset_y = -40;// defaults for level === 1\n\n                    let rotate_scaler = this.offset(offset_x, offset_y);\n                    let rotate_scaler2 = this.offset(offset_x * -1, offset_y);\n                    \n\n                    \n                    projs.push(new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + rotate_scaler[0], this.realY() + rotate_scaler[1]], [speed * this.normalVector[0], speed*this.normalVector[1]], this.degrees, 20, 1, 0, this.basedamage, 4));\n                    projs.push(new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + rotate_scaler2[0], this.realY() + rotate_scaler2[1]], [speed* this.normalVector[0], speed*this.normalVector[1]], this.degrees, 20, 1, 0, this.basedamage, 4));\n                    return projs;\n                }\n                else\n                {\n                    this.shootTimer -= 1;\n                    return undefined;\n                }\n                //remember to return an array!\n                break;\n            case 2: //double shot\n                speed = 12;\n                cooldown = 10.5;\n                if(this.shootTimer <= 0)\n                {\n                 \n                    this.shotsLeft--;\n                    let projs = [];\n                    this.shootTimer = cooldown;\n                    let offset_x = 17;\n                    let offset_y = -40;// defaults for level === 1\n                    if (this.ship_level === 0)\n                    {\n                        offset_y = -30;\n                    }\n\n                    let rotate_scaler = this.offset(offset_x, offset_y);\n                    let rotate_scaler2 = this.offset(offset_x * -1, offset_y);\n                    \n\n                    let x = this.normalVector[0];\n                    let y = this.normalVector[1];\n\n                    let d = (this.degrees * Math.PI / 180);\n                    let x_modifier2 = x * Math.cos(Math.PI / 6) - y * Math.sin(Math.PI / 6);\n                    let y_modifier2 = x * Math.sin(Math.PI / 6) + y * Math.cos(Math.PI / 6);\n                    let x_modifier = x * Math.cos(- Math.PI / 6) - y * Math.sin(- Math.PI / 6);\n                    let y_modifier = x * Math.sin(- Math.PI / 6) + y * Math.cos(- Math.PI / 6);\n\n                    projs.push(new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + rotate_scaler[0], this.realY() + rotate_scaler[1]], [speed * this.normalVector[0], speed*this.normalVector[1]], this.degrees, 20, 1, 0, this.basedamage, 4));\n                    projs.push(new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + rotate_scaler2[0], this.realY() + rotate_scaler2[1]], [speed* this.normalVector[0], speed*this.normalVector[1]], this.degrees, 20, 1, 0, this.basedamage, 4));\n                    projs.push(new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + rotate_scaler[0], this.realY() + rotate_scaler[1]], [speed * x_modifier2, speed * y_modifier2], this.degrees + 30, 20, 1, 0, this.basedamage, 4));\n                    projs.push(new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + rotate_scaler2[0], this.realY() + rotate_scaler2[1]], [speed* x_modifier, speed * y_modifier], this.degrees - 30, 20, 1, 0, this.basedamage, 4));\n                   \n                    if (this.shotsLeft <= 0)\n                    {\n                        this.projectileType = TYPES2[this.ship_level].defaultprojType;\n                    }\n                    return projs;\n                    \n                }\n                else\n                {\n                    this.shootTimer -= 1;\n                    return undefined;\n                }\n            case 3:\n                speed = 17;\n                cooldown = 6;\n                if(this.shootTimer <= 0)\n                {\n                    this.shotsLeft--;\n                    let projs = [];\n                    this.shootTimer = cooldown;\n                    let offset_x = 0;\n                    let offset_y = -17;// defaults for level === 1\n\n                    let rotate_scaler = this.offset(offset_x, offset_y);\n\n                    projs.push(new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + rotate_scaler[0], this.realY() + rotate_scaler[1]], [speed * this.normalVector[0], speed*this.normalVector[1]], this.degrees, 20, 1, 3, this.basedamage * 2.5, 4, 2, \"images/gamma.png\"));\n                    if (this.shotsLeft <= 0)\n                    {\n                        this.projectileType = TYPES2[this.ship_level].defaultprojType;\n                    }\n                    \n                    return projs;\n                }\n                else\n                {\n                    this.shootTimer -= 1;\n                    return undefined;\n                }\n                //remember to return an array!\n                break;\n            case 4: //basic lasers double\n               \n            speed = 16;\n            cooldown = 7.5;\n            if(this.shootTimer <= 0)\n            {\n               \n                let projs = [];\n                this.shootTimer = cooldown;\n                let offset_x = 25;\n                let offset_y = -40;// defaults for level === 1\n\n                let rotate_scaler = this.offset(offset_x, offset_y);\n                let rotate_scaler2 = this.offset(offset_x * -1, offset_y);\n                \n\n                \n                projs.push(new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + rotate_scaler[0], this.realY() + rotate_scaler[1]], [speed * this.normalVector[0], speed*this.normalVector[1]], this.degrees, 20, 1, 0, this.basedamage, 4));\n                projs.push(new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + rotate_scaler2[0], this.realY() + rotate_scaler2[1]], [speed* this.normalVector[0], speed*this.normalVector[1]], this.degrees, 20, 1, 0, this.basedamage, 4));\n                return projs;\n            }\n            else\n            {\n                this.shootTimer -= 1;\n                return undefined;\n            }\n            //remember to return an array!\n            break;\n\n            default:\n                // console.error(\"unknown projectile type\");\n        }\n    }\n\n    dealDamage(dmg)\n    {\n        if(this.shield > 0)\n        {\n            this.shield -= dmg;\n            if(this.shield < 0)\n            {\n                this.shield = 0;\n            }\n        }\n        else\n        {\n            this.health -= dmg;\n            if(this.health <= 0)\n            {\n                if(!this.dead) //dead code most likely\n                {\n                    // audio.gameover.play();\n                    this.dead = true;\n                }\n\n            }\n        }\n       \n    }\n\n    updateAngleAndNormalizedVector(mouse_x, mouse_y)\n    {\n        let distX = mouse_x - this.realX();\n        let distY = mouse_y - this.realY();\n        if(distX === 0)\n        {\n            if(this.realY() > mouse_y)\n            {\n                this.degrees = 180;\n            }\n            else\n                this.degrees = 0;\n        }\n        else if (distY === 0)\n        {\n            if(distX > 0)\n            {\n                this.degrees = 90;\n            }\n            else\n            {\n                this.degrees = 270;\n            }\n        }\n        else\n        {//beware y is on top not bototm\n            if(distX > 0)\n            {\n                this.degrees = 90 + ((Math.atan(distY / distX)) * 180.0 / Math.PI);\n            }\n            else\n            {\n                this.degrees = 270 + ((Math.atan(distY / distX)) * 180.0 / Math.PI);\n            }\n        }\n\n        length = Math.sqrt(distX * distX + distY * distY);\n        // this.normalVector = [Math.abs(distX) / length, Math.abs(distY) / length];\n        this.normalVector = [distX / length, distY / length];\n    }\n\n    realX(){ \n        return this.posX + this.width / 2 + 1;\n    }\n\n    realY(){ \n        return this.posY + this.height * .3;\n    }\n\n    //#offset returns the new (x,y) relative to center after rotating to this.degrees\n    offset(x, y, deg = 0) //x,y relative to center, which should be realX() and real(Y), prior to rotation\n    {\n        //apply matrix transformation of form \n        //R = |cos θ  - sin θ |\n        //    | sin θ   cos θ |\n        //to apply rotational transformation by changing basis vectors \n\n        let degrees = this.degrees + deg; //setup\n        //usually -90 but because y is going positive going down, don't have to\n\n        let c = Math.cos(degrees * Math.PI / 180.0);\n        let s = Math.sin(degrees * Math.PI / 180.0);\n\n        return [x * c - y * s, x * s + y * c];\n    }\n\n    leftX()\n    {\n        return this.posX;\n    }\n\n    rightX()\n    {\n        return this.posX + this.width;\n    }\n\n    upY()\n    {\n        return this.posY;\n    }\n\n    downY()\n    {\n        return this.posY + this.height;\n    }\n\n    corners()\n    {\n        let topleft_corner = this.offset(this.leftX(), this.upY());\n        let topright_corner = this.offset(this.rightX(), this.upY());\n        let bottomleft_corner = this.offset(this.leftX(), this.downY());\n        let bottomright_corner = this.offset(this.rightX(), this.downY());\n\n        return[[this.realX() + topleft_corner[0], this.realY() + topleft_corner[1]], [this.realX() + topright_corner[0], this.realY() + topright_corner[1]], [this.realX() + bottomleft_corner[0], this.realY() + bottomleft_corner[1]], [this.realX() + bottomright_corner[0], this.realY() + bottomright_corner[1]] ];\n    }\n}\n\n\n//# sourceURL=webpack:///./src/player.js?");

/***/ }),

/***/ "./src/projectile.js":
/*!***************************!*\
  !*** ./src/projectile.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Projectile)\n/* harmony export */ });\n//projectile.js\n//just pass context around into draw and animate specifically\n\n\nclass Projectile {\n    constructor(position, velocity, size, collidable, owner, type)//color optional\n    {\n        this.posX = position[0];\n        this.posY = position[1];\n        this.velX = velocity[0];\n        this.velY = velocity[1];\n        this.size = size;\n        this.collidable = collidable;\n        this.type = type;\n        this.owner = owner; //1 ally, 2 enemy, 3 neutral\n    }\n\n    draw()\n    {\n        console.error(\"Projectile#draw() should be overridden\");\n    }\n\n    animate(context)\n    {\n        this.move();\n        if (this.posY >= 0)\n            this.draw(context);\n    }\n\n    move() //default move, no acceleration. projectiles, stars, some enemy ships, drops, etc.\n    {\n        this.posX += this.velX;\n        this.posY += this.velY;\n    }\n    \n    outofBounds(width, height)\n    {\n        return ( (this.owner !== 2 && this.posX < 0) || (this.owner === 2 && this.posX < -500) || (this.owner !== 2 && this.posY < 0) || (this.owner === 2 && this.posY < -500) || (this.owner!== 2 && this.posX >= width) || (this.owner === 2 && this.posX >= width + 500) || this.posY >= height)\n    }\n\n}\n\n\n//# sourceURL=webpack:///./src/projectile.js?");

/***/ }),

/***/ "./src/ship.js":
/*!*********************!*\
  !*** ./src/ship.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Ship)\n/* harmony export */ });\n/* harmony import */ var _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./circleDamageProjectile */ \"./src/circleDamageProjectile.js\");\n/* harmony import */ var _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./laserDamageProjectile */ \"./src/laserDamageProjectile.js\");\n/* harmony import */ var _ellipseDamageProjectile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ellipseDamageProjectile */ \"./src/ellipseDamageProjectile.js\");\n/* harmony import */ var _laserbeam__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./laserbeam */ \"./src/laserbeam.js\");\n/* harmony import */ var _lensflare__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lensflare */ \"./src/lensflare.js\");\n/* harmony import */ var _orbDamageProjectile__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./orbDamageProjectile */ \"./src/orbDamageProjectile.js\");\n// let SAFEFRAMES = 5;\n\n\n\n\n\n\n\n\nconst TYPES = [\n    { \n        //Basic Enemy Ship\n        velocity: [0, 1.65 * (0.4 + Math.random() * 0.8)],\n        endvelocity: [0, 1.65],\n        health: 135,\n        damage: 60,\n        img: 'images/enemyship1.png',\n        color: \"red\",\n        blur: 0,\n        rotatable: false,\n        scale: .022, \n        shootTimerInit: 50, \n        gold: 1500,\n        value: 1,\n        shotsLeft: 40\n    },\n    { \n        //Purple Corner Shooting Enemy Ship\n        velocity: [0, 1    * (0.4 + Math.random() * 0.8)],\n        endvelocity: [0, 1],\n        health: 175,\n        damage: 70,\n        img: 'images/enemyship2.png',\n        color: \"pink\",\n        blur: 0,\n        rotatable: false,\n        scale: .022, \n        shootTimerInit: 50, \n        gold: 2000,\n        value: 1.03,\n        shotsLeft: 40\n    },\n    {\n         //yellow dude who zooms in but shoot slows and has pauses, tanky hp\n         velocity: [0, 5],\n         endvelocity: [0, 1.4],\n         health: 250,\n         damage: 60,\n         img: 'images/enemyship3.png',\n         color: \"yellow\",\n         blur: 0,\n         rotatable: false,\n         scale: .022, \n         shootTimerInit: 50, \n         gold: 2000,\n         value: 1.04,\n         shotsLeft: 8\n    },\n    {\n        //Blue dude who rapidly zooms in \n        velocity: [0, 10.2],\n        endvelocity: [0, 1.8],\n        health: 150,\n        damage: 35,\n        img: 'images/enemyship4.png',\n        color: \"cyan\",\n        blur: 0,\n        rotatable: true,\n        scale: .022, \n        shootTimerInit: 32, \n        gold: 2200,\n        value: 1.06,\n        shotsLeft: 8\n    },\n    {\n        //Purple dude who actively shoots (slowly) at player \n        velocity: [0, 1.6],\n        endvelocity: [0, 1.6],\n        health: 165,\n        damage: 55,\n        img: 'images/enemyship5.png',\n        color: \"purple\",\n        blur: 0,\n        rotatable: true,\n        scale: .1, \n        shootTimerInit: 20, \n        gold: 2100,\n        value: 1.05,\n        shotsLeft: 3\n    },\n    {\n        velocity: [0, 0.6],\n        endvelocity: [0, 0.6],\n        health: 350,\n        damage: 75,\n        img: 'images/enemyship6.png',\n        color: \"green\",\n        blur: 0,\n        rotatable: false,\n        scale: .085, \n        shootTimerInit: 40, \n        gold: 2500,\n        value: 1.09,\n        shotsLeft: 2\n    },\n    { //BOSS 1\n        //laser in middle that flashes first. do it later in the fight when they go there\n\n        velocity: [0, 4.5],\n        endvelocity: [0, 0],\n        health: 8000,\n        damage: 80, //variable!\n        img: 'images/boss1.png',\n        color: \"red\",\n        blur: 0,\n        rotatable: false,\n        scale: .11, \n        shootTimerInit: 30,\n        shootTimerInit2: 693,  \n        shootTimerInit3: 250, \n        gold: 20000,\n        value: 0,\n        shotsLeft: 15 //variable!\n        //add the two minions\n    },\n    {\n        velocity: [0, 0],\n        endvelocity: [0, 0],\n        health: 2500,\n        damage: 50, \n        img: 'images/bossminion.png',\n        color: \"red\",\n        blur: 0,\n        rotatable: true,\n        scale: .11, \n        shootTimerInit: 70,\n        gold: 0,\n        value: 0,\n        shotsLeft: 2 //variable!\n    },\n    {\n        velocity: [0, 0.75],\n        endvelocity: [0, 0.75],\n        health: 175,\n        damage: 60, \n        img: 'images/enemyship7.png',\n        color: \"blue\",\n        blur: 0,\n        rotatable: false,\n        scale: .082, \n        shootTimerInit: -1,\n        gold: 500,\n        value: 0,\n        shotsLeft: -1 //variable!\n    },\n    {\n        velocity: [0, 0.66],\n        endvelocity: [0, 0.66],\n        health: 400,\n        damage: 125,\n        img: \"images/enemyship8.png\",\n        color: \"GoldenRod\",\n        blur: 0,\n        rotatable: false,\n        scale: .08,\n        shootTimerInit: 130,\n        gold: 4000,\n        value: 1.15,\n        shotsLeft: 2\n    },\n    {\n        velocity: [0,1],\n        endvelocity: [0,1],\n        health: 350,\n        damage: 140,\n        img: \"images/enemyship9.png\",\n        color: \"green\",\n        blur: 0,\n        rotatable: false,\n        scale: 0.08,\n        shootTimerInit: 65,\n        gold: 3500,\n        value: 1.15,\n        shotsLeft: 40\n    },\n    {\n        velocity: [0, 15],\n        endvelocity: [0, 0],\n        health: 11000,\n        damage: 80, //variable!\n        img: 'images/orios.png',\n        color: \"#0009DF\",\n        blur: 0,\n        rotatable: true,\n        scale: .23, \n        shootTimerInit: 15, //straight down the middle laser cannon\n        shootTimerInit2: 500,  //spread attack\n        shootTimerInit3: 250, //orbs\n        gold: 20000,\n        value: 0,\n        shotsLeft: 27,\n        shotsLeft2: 15, //spread attack\n        shotsLeft3: 6\n    }\n        \n];\n\nconst LEVEL_MODIFIER = {\n    //health, damage, \n    1: [1, 1],\n    2: [1, 1]\n}\n\nconst DIFFICULTY_MODIFIER = {\n    \"easy\": [.7, .5],\n    \"normal\": [1, .75],\n    \"hard\": [1.2, 1],\n    \"legendary\": [1.5, 2]\n}\n\nclass Ship {\n    constructor(position, type, background, boss = false) //more later, type?\n    {\n        this.posX = position[0];\n        this.posY = position[1];\n\n        this.collided = 0;\n\n        this.background = background;\n        this.type = type;\n        this.boss = boss;\n        this.canvasBottom = document.getElementById('game-canvas').getAttribute('height');\n        this.setup(type);\n    }\n\n    setup(type)\n    {\n        TYPES[type];\n\n        const image = new Image();\n        image.src = TYPES[type].img;\n        image.onload = () => {\n            this.image = image;\n            this.width = image.width * TYPES[type].scale;\n            this.height = image.height * TYPES[type].scale;\n        }\n        \n\n        this.velX = TYPES[type].velocity[0];\n        this.velY = TYPES[type].velocity[1];\n        this.health = TYPES[type].health * LEVEL_MODIFIER[this.background.level_id][0] * DIFFICULTY_MODIFIER[this.background.difficulty][0]; \n        this.damage = TYPES[type].damage * LEVEL_MODIFIER[this.background.level_id][1] * DIFFICULTY_MODIFIER[this.background.difficulty][1];\n\n        this.degrees = 0;\n\n        this.color = TYPES[type].color;\n        this.blur = TYPES[type].blur;\n        this.normalVector = [0,1];\n        this.rotatable = TYPES[type].rotatable;\n\n        this.shootTimer = TYPES[type].shootTimerInit;\n        if (this.boss)\n        {\n            this.shootTimer2 = TYPES[type].shootTimerInit2;\n            this.shootTimer3 = TYPES[type].shootTimerInit3;\n            this.shotsLeft2 = TYPES[type].shotsLeft2;\n            this.shotsLeft3 = TYPES[type].shotsLeft3;\n        }\n        this.gold = TYPES[type].gold;\n        this.value = TYPES[type].value;\n        this.shotsLeft = TYPES[type].shotsLeft;\n        //dependent\n\n        if(this.boss)\n        {\n            this.dependencies = [];\n            switch (this.type)\n            {\n                case 6:\n                    let left = (new Ship([this.posX, this.posY + 50], 7, this.background, true));\n                    this.dependencies.push(left);\n                    this.background.enemyships.push(left);\n                    // this.dependencies.push(;  );\n                    \n                    let right = (new Ship([this.posX + 800, this.posY + 50], 7, this.background, true));\n                    this.dependencies.push(right);\n                    this.background.enemyships.push(right);\n                    //add minions\n                    break;\n\n            }\n        }\n    }\n\n    draw(context)\n    {\n        if (this.image)\n        {\n            if (this.rotatable) this.updateAngleAndNormalizedVector();\n            context.save();\n\n            if(this.type === 11) //QoL\n            {\n                if(this.degrees > 60 && this.degrees < 180)\n                {\n                    this.degrees = 60;\n                }\n                if(this.degrees >= 180 && this.degrees < 300)\n                {\n                    this.degrees = 300;\n                }\n            }\n            context.shadowColor = this.color;\n            context.shadowBlur = this.blur;\n            context.translate(this.posX+this.width/2, this.posY+this.height/2);\n            context.rotate(this.degrees*Math.PI/180.0);\n            context.translate(-this.posX-this.width/2, -this.posY-this.height/2);\n            context.drawImage(this.image, this.posX, this.posY, this.width, this.height);\n            context.restore();\n        }\n    }\n\n    animate(context)\n    {\n        if(this.posY+this.height / 2 + 1 >= 0)\n        {\n            this.move();\n            this.shootProjectile();\n            this.draw(context);\n        }\n        else\n        {\n            this.posY += 1;\n        }\n    }\n\n    move()\n    {\n        if (this.collided > 1)\n        {\n            this.posX += this.velX;\n            this.posY += this.velY;\n            this.velX = this.velX * 0.9;\n            this.velY = this.velY * 0.9;\n            this.collided -= 1;\n            return;\n        }\n        else if(this.collided === 1)\n        {\n            this.posX += this.velX;\n            this.posY += this.velY;\n            this.velX = TYPES[this.type].endvelocity[0];\n            this.velY = TYPES[this.type].endvelocity[1];\n            this.collided -= 1;\n            return;\n        }\n        //to be implemented\n        if (this.type === 0)\n        {   \n            if(this.posY + 100 < this.background.player.posY)\n            {\n                if(this.posX > this.background.player.posX)\n                {\n                    this.velX = -0.4;\n                }\n                else\n                    this.velX = 0.4;\n\n                this.posX += this.velX;\n\n            }\n            this.posY += this.velY;\n        }\n        else if (this.type === 1 || this.type === 4 || this.type === 8 || this.type === 10)\n        {\n            this.posX += this.velX;\n            this.posY += this.velY;\n        }\n\n        else if (this.type === 2)\n        {\n            this.posY += this.velY;\n            if(this.velY > 1.4)\n            {\n                this.velY -= 0.4;\n            }\n\n            if(this.posY + 100 < this.background.player.posY)\n            {\n                if(this.posX > this.background.player.posX)\n                {\n                    this.velX = -0.3;\n                }\n                else\n                    this.velX = 0.3;\n\n                this.posX += this.velX;\n            }\n        }\n        else if (this.type === 3)\n        {\n            this.posY += this.velY;\n            if(this.velY > 1.8)\n            {\n                this.velY -= 0.4;\n            }\n \n        }\n        else if (this.type === 5)\n        {   \n            if(this.posY + 100 < this.background.player.posY)\n            {\n                if(this.posX > this.background.player.posX)\n                {\n                    this.velX = -1.75;\n                }\n                else\n                    this.velX = 1.75;\n\n                this.posX += this.velX;\n\n            }\n            this.posY += this.velY;\n        }\n        else if (this.type === 6)\n        {\n            this.posX += this.velX;\n            this.posY += this.velY;\n\n            this.dependencies.forEach((thing) => {\n                if (thing!= null)\n                {\n                    thing.posX += this.velX;\n                    thing.posY += this.velY;\n                }\n            });\n\n            if(this.dependencies[0] && this.dependencies[0].health <= 0)\n            {\n                this.health -= 1500;\n                this.dependencies[0] = null;\n            }\n            if(this.dependencies[1] && this.dependencies[1].health <= 0)\n            {\n                this.health -= 1500;\n                this.dependencies[0] = null;\n            }\n\n            if(this.dependencies.length === 3 && this.dependencies[2].duration <= 0)\n            {\n                this.dependencies.pop();\n            }\n\n            //force the minions to move exactly the same way\n            if(this.velY > 1)\n            {\n                this.velY = this.velY * 0.85;\n            }\n            else if(this.velY > .15)\n            {\n                this.velY = this.velY * 0.98;\n            }\n            else\n            {\n                this.velY = 0;\n            }\n        \n        \n            if(this.realX() > this.background.player.realX() + 30)\n            {\n                if(this.realX() <= this.background.width * .3)\n                    this.velX = 0;\n                else\n                    this.velX = -1.5;\n            }\n            else if( this.realX() + 30 < this.background.player.realX())\n            {\n                if(this.realX() >= this.background.width * .7)\n                    this.velX = 0;\n                else\n                    this.velX = 1.5;\n            }\n            else if (this.realX() > this.background.player.realX())\n            {\n                this.velX -= 0.003;\n            }\n            else if (this.realX() < this.background.player.realX())\n            {\n                this.velX += 0.003;\n            }\n\n            // this.velX += (Math.random()-Math.random()) * 0.03; //randomly moving influence\n            //make above have cooldown and much larger influence!\n\n            //idk about centering issue\n            if(this.velX > 1.5)\n            {\n                this.velX = 0.5;\n            }\n            if(this.velX < -1.5)\n            {\n                this.velX = -0.5;\n            }\n        }\n        else if (this.type === 7)\n        {\n            //do nothing\n        }\n        else if (this.type === 9)\n        {   \n            if(this.posY + 100 < this.background.player.posY)\n            {\n                if(this.posX > this.background.player.posX)\n                {\n                    this.velX = -0.3;\n                }\n                else\n                    this.velX = 0.3;\n\n                this.posX += this.velX;\n\n            }\n            this.posY += this.velY;\n        }\n        else if (this.type === 11)\n        {\n            this.posX += this.velX;\n            this.posY += this.velY;\n\n            if(this.realX() > this.background.player.realX() + 80)\n            {\n                if(this.realX() <= this.background.width * .3)\n                    this.velX = 0;\n                else\n                    this.velX = -1;\n            }\n            else if( this.realX() + 80 < this.background.player.realX())\n            {\n                if(this.realX() >= this.background.width * .7)\n                    this.velX = 0;\n                else\n                    this.velX = 1;\n            }\n            else if (this.realX() > this.background.player.realX())\n            {\n                this.velX -= 0.001;\n            }\n            else if (this.realX() < this.background.player.realX())\n            {\n                this.velX += 0.001;\n            }\n\n            if(this.velY > 1)\n            {\n                this.velY = this.velY * 0.85;\n            }\n            else if(this.velY > .15)\n            {\n                this.velY = this.velY * 0.98;\n            }\n            else\n            {\n                this.velY = 0;\n            }\n\n            this.velX += (Math.random()-Math.random()) * 0.03; //randomly moving influence\n            // make above have cooldown and much larger influence!\n\n            // idk about centering issue\n            if(this.velX > 1)\n            {\n                this.velX = 0.4;\n            }\n            if(this.velX < -1)\n            {\n                this.velX = -0.4;\n            }\n        }\n    }\n\n    // shootProjectile(target_x = this.realX(), target_y = this.canvasBottom)\n    shootProjectile(posX, posY, x_velocity, y_velocity)\n    {\n        let mx = posX;\n        let my = posY;\n\n        let speed;\n        let cooldown;\n        let damage;\n\n        switch(this.type)\n        {\n            \n            case 0: //red ball center\n                speed = 3.3;\n                cooldown = 100;\n                \n                if(this.shootTimer <= 0)\n                {\n                    this.shootTimer = cooldown;\n                    audio.laser2.play();\n                    let proj = new _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]([this.realX(), this.realY()+30], [speed * this.normalVector[0], speed*this.normalVector[1]], 4.5, 2, 0, this.damage, 20);\n                    this.background.enemyprojectiles.push(proj);\n                    this.shotsLeft -= 1;\n                }\n                else\n                {\n                    this.shootTimer -= 1;\n                    return undefined;\n                }\n                break;\n\n            case 1:\n                speed = 5.5;\n                cooldown = 150;\n                if(this.shootTimer <= 0)\n                {\n                    audio.laser2.play();\n                    this.shootTimer = cooldown;\n                    let proj = new _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]([this.realX()+40, this.realY()+30], [speed * Math.sqrt(2) / 2, speed * Math.sqrt(2) / 2], 6, 2, 1, this.damage, 20, -1 * Math.PI / 4, 3 * Math.PI / 4);\n                    this.background.enemyprojectiles.push(proj);\n\n                    let proj2 = new _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]([this.realX()-40, this.realY()+30], [speed * -1 * Math.sqrt(2) / 2,  speed * Math.sqrt(2) / 2], 6, 2, 1, this.damage, 20, Math.PI / 4, 5 * Math.PI / 4);\n                    this.background.enemyprojectiles.push(proj2);\n\n                    let proj3 = new _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]([this.realX()+40, this.realY()-30], [speed * Math.sqrt(2) / 2, -1 * speed * Math.sqrt(2) / 2], 6, 2, 1, this.damage, 20, 5 * Math.PI / 4, 9 * Math.PI / 4);\n                    this.background.enemyprojectiles.push(proj3);\n\n                    let proj4 = new _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]([this.realX()-40, this.realY()-30], [speed * -1 * Math.sqrt(2) / 2,  -1 * speed * Math.sqrt(2) / 2], 6, 2, 1, this.damage, 20, 3 * Math.PI / 4, 7 * Math.PI / 4);\n                    this.background.enemyprojectiles.push(proj4);\n                    this.shotsLeft -= 1;\n                }\n                else\n                {\n                    this.shootTimer -= 1;\n                    return undefined;\n                }\n                break;\n            case 2: \n                speed = 3.5;\n                cooldown = 18;\n                if (this.shotsLeft <= 0) \n                {\n                    \n                    this.shootTimer = 150;\n                    this.shotsLeft = 8;\n                    return undefined;\n                }\n                if(this.shootTimer <= 0)\n                {\n                    this.shootTimer = cooldown;\n                    let offset;\n                    if(this.shotsLeft % 2 === 0)\n                    {\n                        offset = 26.5;\n                    }\n                    else\n                    {\n                        offset = -26.5;\n                    }\n                    audio.laser2.play();\n                    let proj = new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + offset, this.realY()+30], [0, speed], 0, 15, 2, 2, this.damage, 25);\n                    this.background.enemyprojectiles.push(proj);\n                    this.shotsLeft -= 1;\n                    //position, velocity, angle, length, owner, type, damage, blur=0, width=2)\n                }\n                else\n                {\n                    this.shootTimer -= 1;\n                }\n                    break;\n            case 3: \n                speed = 4;\n                cooldown = 5.5;\n                if (this.shotsLeft <= 0) \n                {\n                    this.shootTimer = 250;\n                    this.shotsLeft = 8;\n                    return undefined;\n                }\n                if(this.shootTimer <= 0)\n                {\n                    audio.laser2.play();\n                    this.shootTimer = cooldown;\n                    let scatter_x = this.normalVector[0] * (Math.random(0.4) + 0.8);\n                    let scatter_y = this.normalVector[1] * (Math.random(0.4) + 0.8);\n                    let proj = new _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]([this.realX(), this.realY()+30], [speed * scatter_x, speed*scatter_y], 4.5, 2, 3, this.damage, 20);\n                    this.background.enemyprojectiles.push(proj);\n                    this.shotsLeft -= 1;\n                }\n                else\n                {\n                    this.shootTimer -= 1;\n                }\n\n                break;\n            case 4: \n                speed = 3.8;\n                cooldown = 22;\n                if (this.shotsLeft <= 0) \n                {\n                    this.shootTimer = 132;\n                    this.shotsLeft = 3;\n                    return undefined;\n                }\n                if(this.shootTimer <= 0)\n                {\n                    audio.laser2.play();\n                    this.shootTimer = cooldown;\n\n                    let offset_x = 27;\n                    let offset_y = 0;// defaults for level === 1\n\n                    let rotate_scaler = this.offset(offset_x, offset_y);\n                    let rotate_scaler2 = this.offset(offset_x * -1, offset_y);\n\n                    \n                    let proj = new _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]([this.realX() + rotate_scaler[0], this.realY()+rotate_scaler[1]], [speed * this.normalVector[0], speed*this.normalVector[1]], 5, 2, 4, this.damage, 5);\n                    let proj2 = new _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]([this.realX() + rotate_scaler2[0], this.realY()+rotate_scaler2[1]], [speed * this.normalVector[0], speed*this.normalVector[1]], 5, 2, 4, this.damage, 5);\n                    \n                    this.background.enemyprojectiles.push(proj);\n                    this.background.enemyprojectiles.push(proj2);\n                    this.shotsLeft -= 1;\n                }\n                else\n                {\n                    this.shootTimer -= 1;\n                }\n\n                break;\n            case 5:\n                \n                speed = 3.3;\n                cooldown = 30;\n                \n                if (this.shotsLeft <= 0) \n                {\n                    this.shootTimer = 125;\n                    this.shotsLeft = 2;\n                    return undefined;\n                }\n                if(this.shootTimer <= 0)\n                {\n                    audio.laser2.play();\n                    this.shootTimer = cooldown;\n                    let proj = new _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]([this.realX()-40, this.realY()+30], [speed * this.normalVector[0], speed*this.normalVector[1]], 5, 2, 5, this.damage, 20);\n                    this.background.enemyprojectiles.push(proj);\n\n                    let proj2 = new _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]([this.realX()+40, this.realY()+30], [speed * this.normalVector[0], speed*this.normalVector[1]], 5, 2, 5, this.damage, 20);\n                    this.background.enemyprojectiles.push(proj2);\n                    this.shotsLeft -= 1;\n                }\n                else\n                {\n                    this.shootTimer -= 1;\n                    return undefined;\n                }\n                break;\n            case 6: //red ball center\n                speed = 5.5;\n                cooldown = 100;\n                \n                if(this.shootTimer <= 0)\n                {\n                    audio.laser2.play();\n                    this.shootTimer = cooldown;\n                    let proj = new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + 122, this.realY()+110], [0, speed], 0, 41, 2, 0, 90 * LEVEL_MODIFIER[this.background.level_id][1], 25, 3);\n                    let proj2 = new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() - 122, this.realY()+110], [0, speed], 0, 41, 2, 0, 90 * LEVEL_MODIFIER[this.background.level_id][1], 25, 3);\n            \n                    this.background.enemyprojectiles.push(proj);\n                    this.background.enemyprojectiles.push(proj2);\n                    //constructor(position, velocity, length, width, damage, type, angle)\n                }\n                else\n                {\n                    this.shootTimer -= 1;\n                }\n                speed = 6;\n                cooldown = 750;\n\n                if(this.shootTimer2 <= 0)\n                {\n                    audio.laserbeam.play();\n                    this.shootTimer2 = cooldown;\n                    let proj3 = new _laserbeam__WEBPACK_IMPORTED_MODULE_3__[\"default\"]([this.realX(), this.realY()+65], [0, 0], this.canvasBottom, 70, 7.5 * LEVEL_MODIFIER[this.background.level_id][1] , 0, 150);\n                    this.background.lasers.push(proj3);\n                    this.dependencies.push(proj3);\n                    //constructor(position, velocity, length, width, damage, type, angle)\n                }\n                else\n                {\n                    this.shootTimer2 -= 1;\n                }\n\n                if(this.shootTimer2 === 100)\n                {\n                    audio.lasercharge.play();\n                    let flare = (new _lensflare__WEBPACK_IMPORTED_MODULE_4__[\"default\"]([this.realX(), this.realY()+93.5], 98.5, \"images/redflare.png\", 0.12, \"#8b0000\", 20));\n                    this.background.extras.push(flare);\n                    this.dependencies.push(flare);\n                }\n\n                speed = 3.7;\n                cooldown = 4;\n                if (this.shotsLeft <= 0) \n                {\n                    this.shootTimer3 = 500;\n                    this.shotsLeft = 15;\n                    return undefined;\n                }\n                if(this.shootTimer3 <= 0)\n                {\n                    audio.laser2.play();\n                    this.shootTimer3 = cooldown;\n                    let scatter_deg = Math.random() * 60 + 240;\n                    let scatter_x = Math.cos(scatter_deg * Math.PI / 180);\n                    let scatter_y = -1 * Math.sin(scatter_deg * Math.PI / 180);\n\n                    let proj = new _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]([this.realX()-262, this.realY()+117], [speed * scatter_x, speed * scatter_y], 4, 2, 0, 25 * LEVEL_MODIFIER[this.background.level_id][1], 18);\n                    let proj2 = new _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]([this.realX()+262, this.realY()+117], [speed * scatter_x, speed * scatter_y], 4, 2, 0, 25 * LEVEL_MODIFIER[this.background.level_id][1], 18);\n                    this.background.enemyprojectiles.push(proj);\n                    this.background.enemyprojectiles.push(proj2);\n                    this.shotsLeft -= 1;\n                }\n                else\n                {\n                    this.shootTimer3 -= 1;\n                }\n    \n                break;\n\n            case 7:  \n                speed = 3.8;\n                cooldown = 35;\n                if (this.shotsLeft <= 0) \n                {\n                    this.shootTimer = 180;\n                    this.shotsLeft = 2;\n                    return undefined;\n                }\n                if(this.shootTimer <= 0)\n                {\n                    this.shootTimer = cooldown;\n\n                    let offset_x = 27;\n                    let offset_y = 0;// defaults for level === 1\n\n                    let rotate_scaler = this.offset(offset_x, offset_y);\n                    let rotate_scaler2 = this.offset(offset_x * -1, offset_y);\n\n                    audio.laser2.play();\n            \n                    let proj3 = new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + rotate_scaler[0], this.realY()+rotate_scaler[1]], [speed * this.normalVector[0], speed*this.normalVector[1]], this.degrees + 180, 30, 2, 0, this.damage, 5);\n                    let proj4 = new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + rotate_scaler2[0], this.realY()+rotate_scaler2[1]], [speed * this.normalVector[0], speed*this.normalVector[1]], this.degrees + 180, 30, 2, 0, this.damage, 5);\n                    \n                    this.background.enemyprojectiles.push(proj3);\n                    this.background.enemyprojectiles.push(proj4);\n                    this.shotsLeft -= 1;\n                }\n                else\n                {\n                    this.shootTimer -= 1;\n                }\n\n                break;\n            case 8:\n                //do nothing\n            break;\n\n            case 9: \n                speed = 13;\n                cooldown = 50;\n\n                if (this.shotsLeft <= 0) \n                {\n                    this.shootTimer = 170;\n                    this.shotsLeft = 2;\n                    return undefined;\n                }\n                \n                if(this.shootTimer <= 0)\n                {\n                    audio.laser3.play();\n                    this.shootTimer = cooldown;\n                    \n                    // let proj = new LaserDamageProjectile([this.realX()-55, this.realY()+60], [0, speed], 0, 55, 2, 4, this.damage, 15, 3);\n                    // let proj2 = new LaserDamageProjectile([this.realX()+55, this.realY()+60], [0, speed], 0, 55, 2, 4, this.damage, 15, 3);\n\n                    let proj = new _ellipseDamageProjectile__WEBPACK_IMPORTED_MODULE_2__[\"default\"]([this.realX()-55, this.realY()+80], [0, speed], 3, 50, 0, this.damage, 15);\n                    let proj2 = new _ellipseDamageProjectile__WEBPACK_IMPORTED_MODULE_2__[\"default\"]([this.realX()+55, this.realY()+80], [0, speed], 3, 50, 0, this.damage, 15);\n                    \n                    this.background.enemyprojectiles.push(proj);\n                    this.background.enemyprojectiles.push(proj2);\n                    this.shotsLeft -= 1;\n                }\n                else\n                {\n                    this.shootTimer -= 1;\n                }\n\n                break;\n            case 10:\n                speed = 4.3;\n                cooldown = 130;\n                \n                if(this.shootTimer <= 0)\n                {\n                    this.shootTimer = cooldown;\n\n                    let proj = new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX()-42, this.realY()+30], [0, speed], 0, -1, 2, 4, this.damage, 15, 3, \"images/attackprojectile1.png\");\n                    let proj2 = new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX()-42, this.realY()+30], [-1 * speed * Math.sqrt(2) / 2 , speed * Math.sqrt(2)/2], 45, -1, 2, 4, this.damage, 15, 3, \"images/attackprojectile1.png\");\n                    let proj3 = new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX()-42, this.realY()+30], [speed * Math.sqrt(2) / 2 , speed * Math.sqrt(2)/2], -45, -1, 2, 4, this.damage, 15, 3, \"images/attackprojectile1.png\");\n                    \n                    // let proj2 = new LaserDamageProjectile([this.realX()+55, this.realY()+60], [0, speed], 0, 55, 2, 4, this.damage, 15, 3);\n                    this.background.enemyprojectiles.push(proj);\n                    this.background.enemyprojectiles.push(proj2);\n                    this.background.enemyprojectiles.push(proj3);\n\n                    audio.laser3.play();\n                }\n                else{\n                    this.shootTimer -= 1;\n                }\n                break;\n            case 11:\n                speed = 3;\n                cooldown = 35;\n                damage = 100 * LEVEL_MODIFIER[this.background.level_id][1];\n\n                if (this.shotsLeft3 <= 0) \n                {\n                    this.shootTimer3 = 333;\n                    this.shotsLeft3 = 6;\n                }\n\n                 if(this.shootTimer3 <= 0)\n                {\n                    audio.laser2.play();\n                    this.shootTimer3 = cooldown;\n                    \n                    let offset_x = -333;\n\n                    let offset_y = 178;\n\n                    let scatter_deg = (Math.random() * 90 + 45);//beware y negative\n\n                    let rotate_scaler = this.offset(offset_x, offset_y);\n                    let rotate_scaler2 = this.offset(-1 * offset_x, offset_y);\n\n                    let proj = new _orbDamageProjectile__WEBPACK_IMPORTED_MODULE_5__[\"default\"]([this.realX() + rotate_scaler[0], this.realY() + rotate_scaler[1]], [Math.cos(scatter_deg * Math.PI / 180) * speed, Math.sin(scatter_deg * Math.PI / 180) * speed], 18, 0, damage, 25);\n                    let proj2 = new _orbDamageProjectile__WEBPACK_IMPORTED_MODULE_5__[\"default\"]([this.realX() + rotate_scaler2[0], this.realY() + rotate_scaler2[1]], [Math.cos(scatter_deg * Math.PI / 180) * speed, Math.sin(scatter_deg * Math.PI / 180) * speed], 18, 0, damage, 25);\n                    \n                    \n                    this.background.enemyprojectiles.push(proj);\n                    this.background.enemyprojectiles.push(proj2);\n                    this.shotsLeft3 -= 1;\n                }\n                else\n                {\n                    this.shootTimer3 -= 1;\n                }\n    \n\n\n                \n                speed = 8;\n                cooldown = 2.4;\n                damage = 17.5 * LEVEL_MODIFIER[this.background.level_id][1];\n               \n                if (this.shotsLeft <= 0) \n                {\n                    this.shootTimer = 777;\n                    this.shotsLeft = 27;\n                }\n                if(this.shootTimer <= 0)\n                {\n                    audio.laser2.play();\n                    this.shootTimer = cooldown;\n                    \n                    let offset_x = -10;\n                    let offset_x2 = 0;\n\n                    let offset_y = 120;\n\n                    let rotate_scaler = this.offset(offset_x, offset_y);\n                    let rotate_scaler2 = this.offset(offset_x2, offset_y);\n\n                    let proj = new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + rotate_scaler[0], this.realY() + rotate_scaler[1]], [this.normalVector[0] * speed, this.normalVector[1] * speed], this.degrees + 180, 30, 2, 5, damage, 15, 2.3)\n                    let proj2 = new _laserDamageProjectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([this.realX() + rotate_scaler2[0], this.realY() + rotate_scaler2[1]], [this.normalVector[0] * speed, this.normalVector[1] * speed], this.degrees + 180, 30, 2, 5, damage, 15, 2.3)\n                    \n                    this.background.enemyprojectiles.push(proj);\n                    this.background.enemyprojectiles.push(proj2);\n                    this.shotsLeft -= 1;\n                }\n                else\n                {\n                    this.shootTimer -= 1;\n                }\n    \n\n                speed = 3.9;\n                cooldown = 4;\n                damage = 35 * LEVEL_MODIFIER[this.background.level_id][1]; \n                if (this.shotsLeft2 <= 0) \n                {\n                    this.shootTimer2 = 400;\n                    this.shotsLeft2 = 15;\n                }\n                if(this.shootTimer2 <= 0)\n                {\n                    let offset_x = -165;\n                    let offset_y = 215;\n                    let my_degrees1 = this.customAngleAndNormalizedVector(offset_x, offset_y)[0];\n                    let my_degrees2 = this.customAngleAndNormalizedVector(-1 * offset_x, offset_y)[0];\n\n                    audio.laser2.play();\n                    this.shootTimer2 = cooldown;\n                    let scatter_deg1 = Math.random() * 60 - my_degrees1 - 120; //-90 and 30 more for spread /2, degrees is negative because one is clockwise, other CC\n                    let scatter_x1 = Math.cos(scatter_deg1 * Math.PI / 180);\n                    let scatter_y1 = -1 * Math.sin(scatter_deg1 * Math.PI / 180);\n\n                    let scatter_deg2 = Math.random() * 60 - my_degrees2 - 120;\n                    let scatter_x2 = Math.cos(scatter_deg2 * Math.PI / 180);\n                    let scatter_y2 = -1 * Math.sin(scatter_deg2 * Math.PI / 180);\n\n                    // let offset_x = -262;\n                    // let offset_y = 117;\n\n                    let rotate_scaler = this.offset(offset_x, offset_y);\n                    let rotate_scaler2 = this.offset(offset_x * -1, offset_y);\n\n                    //BELOW NEEDS OFFSETS\n                    let proj = new _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]([this.realX() + rotate_scaler[0], this.realY() + rotate_scaler[1]], [speed * scatter_x1, speed * scatter_y1], 4, 2, 7, damage, 18);\n                    let proj2 = new _circleDamageProjectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]([this.realX()+ rotate_scaler2[0], this.realY() + rotate_scaler2[1]], [speed * scatter_x2, speed * scatter_y2], 4, 2, 7, damage, 18);\n                    this.background.enemyprojectiles.push(proj);\n                    this.background.enemyprojectiles.push(proj2);\n                    this.shotsLeft2 -= 1;\n                }\n                else\n                {\n                    this.shootTimer2 -= 1;\n                }\n    \n                break;\n    \n            default:\n                console.error(\"unknown projectile type\");\n        }\n    }\n\n\n    updateAngleAndNormalizedVector()\n    {\n       \n\n        let target_x = this.background.player.realX();\n        let target_y = this.background.player.realY();\n        let distX = target_x - this.realX();\n        let distY = target_y - this.realY();\n        if(distX === 0)\n        {\n            if(target_y > this.realY())\n            {\n                this.degrees = 180;\n            }\n            else\n                this.degrees = 0;\n        }\n        else if (distY === 0)\n        {\n            if(distX < 0)\n            {\n                this.degrees = 90;\n            }\n            else\n            {\n                this.degrees = 270;\n            }\n        }\n        else\n        {//beware y is on top not bototm\n            if(distX < 0)\n            {\n                this.degrees = 90 + ((Math.atan(distY / distX)) * 180.0 / Math.PI);\n            }\n            else\n            {\n                this.degrees = 270 + ((Math.atan(distY / distX)) * 180.0 / Math.PI);\n            }\n        }\n\n        length = Math.sqrt(distX * distX + distY * distY);\n        // this.normalVector = [Math.abs(distX) / length, Math.abs(distY) / length];\n        this.normalVector = [distX / length, distY / length];\n    }\n\n    customAngleAndNormalizedVector(x, y)\n    {\n        if(!x)\n        {\n            x = 0;\n        }\n        if(!y)\n        {\n            y = 0;\n        }\n        let realrealX = this.realX() + x;\n        let realrealY = this.realY() + y;\n        let target_x = this.background.player.realX();\n        let target_y = this.background.player.realY();\n        let distX = target_x - realrealX;\n        let distY = target_y - realrealY;\n        let ans_deg;\n        let ans_normal_vector;\n        if(distX === 0)\n        {\n            if(target_y > realrealY)\n            {\n                ans_deg = 180;\n            }\n            else\n                ans_deg = 0;\n        }\n        else if (distY === 0)\n        {\n            if(distX < 0)\n            {\n                ans_deg = 90;\n            }\n            else\n            {\n                ans_deg = 270;\n            }\n        }\n        else\n        {//beware y is on top not bototm\n            if(distX < 0)\n            {\n                ans_deg = 90 + ((Math.atan(distY / distX)) * 180.0 / Math.PI);\n            }\n            else\n            {\n                ans_deg = 270 + ((Math.atan(distY / distX)) * 180.0 / Math.PI);\n            }\n        }\n\n        length = Math.sqrt(distX * distX + distY * distY);\n        // this.normalVector = [Math.abs(distX) / length, Math.abs(distY) / length];\n        ans_normal_vector = [distX / length, distY / length];\n        return([ans_deg, ans_normal_vector]);\n    }\n\n    realX(){ //INCOMPLETE - NEEDS TO FACTOR IN ANGLE!! ... or does it? center doesn't change when angle changes\n        return this.posX + this.width / 2;\n    }\n\n    realY(){ \n        if(this.type === 1)\n        {\n            return this.posY + this.height *.4;\n        }\n        else\n        return this.posY + this.height / 2;\n    }\n\n    //#offset returns the new (x,y) relative to center after rotating to this.degrees\n    offset(x, y) //x,y relative to center, which should be realX() and real(Y), prior to rotation\n    {\n        //new stuff below\n        if((this.degrees === undefined || this.degrees === null || Number.isNaN(this.degrees)) && this.rotatable) //shouldn't need this but jic\n        {\n            this.updateAngleAndNormalizedVector();\n        }\n        \n        //apply matrix transformation of form \n        //R = |cos θ  - sin θ |\n        //    | sin θ   cos θ |\n        //to apply rotational transformation by changing basis vectors \n\n        let degrees = this.degrees; //setup\n        console.log(\"deg\", degrees);\n        //usually -90 but because y is going positive going down, don't have to\n\n        let c = Math.cos(degrees * Math.PI / 180.0);\n        let s = Math.sin(degrees * Math.PI / 180.0);\n\n        return [x * c - y * s, x * s + y * c];\n    }\n\n    leftX()\n    {\n        return this.posX;\n    }\n\n    rightX()\n    {\n        return this.posX + this.width;\n    }\n\n    upY()\n    {\n        return this.posY;\n    }\n\n    downY()\n    {\n        if(this.type === 6 || this.type === 11)\n        {\n            return this.posY + this.height * .8;\n        }\n        return this.posY + this.height;\n\n    }\n\n    corners()\n    {\n        let topleft_corner = this.offset(this.leftX() - this.realX(), this.upY() - this.realY());\n        \n        let topright_corner = this.offset(this.rightX() - this.realX(), this.upY() - this.realY());\n        let bottomleft_corner = this.offset(this.leftX() - this.realX(), this.downY() - this.realY());\n        let bottomright_corner = this.offset(this.rightX() - this.realX(), this.downY() - this.realY());\n        console.log(\"bottomleft_corner\", this.realX() + bottomleft_corner[0], this.realY() + bottomleft_corner[1]);\n        console.log(\"bottomrightcorner\", this.realX() + bottomright_corner[0], this.realY() + bottomright_corner[1]);\n\n        return[[this.realX() + topleft_corner[0], this.realY() + topleft_corner[1]], [this.realX() + topright_corner[0], this.realY() + topright_corner[1]], [this.realX() + bottomleft_corner[0], this.realY() + bottomleft_corner[1]], [this.realX() + bottomright_corner[0], this.realY() + bottomright_corner[1]] ];\n    }\n}\n\n\n//# sourceURL=webpack:///./src/ship.js?");

/***/ }),

/***/ "./src/star.js":
/*!*********************!*\
  !*** ./src/star.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Star)\n/* harmony export */ });\n/* harmony import */ var _projectile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./projectile */ \"./src/projectile.js\");\n\n\nclass Star extends _projectile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\n    constructor(positionX, velocityY, size, color=\"white\")\n    {\n        super([positionX, 20], [0, velocityY], size, false, 0, color);\n        let brightest = Math.random()*4;\n        if (brightest < 1)\n        {\n            this.brightness = 255;\n        }\n        else\n        {\n            this.brightness = Math.random()*145 + 110;\n        }\n    }\n    \n\n    draw(context)\n    {\n        let that = this;\n        function setShadow(ctx, color, ox, oy, blur) {\n            ctx.shadowColor = color;\n            // ctx.shadowOffsetX = ox;\n            // ctx.shadowOffsetY = oy;\n            ctx.shadowBlur = blur;\n            // ctx.filter = `brightness(${that.brightness}%)`;\n          }\n    \n        context.beginPath();\n        context.fillStyle = `rgb(${this.brightness}, ${this.brightness}, ${this.brightness})`;\n        setShadow(context, \"white\", 0, 0, this.size*2);\n        context.arc(this.posX, this.posY, this.size, 0, 2 * Math.PI, false);\n        context.fill();\n        context.closePath();\n    }\n}\n\n\n//# sourceURL=webpack:///./src/star.js?");

/***/ }),

/***/ "./src/star3.js":
/*!**********************!*\
  !*** ./src/star3.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Star3)\n/* harmony export */ });\n// Function for create new star\nclass Star3\n{\n    constructor(x,y,z, radius, starsIndex, centerX, centerY, focalLength, starX_dir, starY_dir, innerWidth){\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.radius = radius;\n        this.r = 255;\n        this.g = 255;\n        this.b = 255;\n\n        this.id = starsIndex;\n        this.centerX = centerX;\n        this.centerY = centerY;\n        this.focalLength = focalLength;\n        this.starX_dir = starX_dir; \n        this.starY_dir = starY_dir;\n        this.starY_dir;\n        this.innerWidth = innerWidth;\n    }\n        \n        // Animate Stars\n    update(c){\n        this.starX = (this.x - this.centerX) * (this.focalLength / this.z);\n        this.starX += this.centerX;\n        \n        this.starY = (this.y - this.centerY) * (this.focalLength / this.z);\n        this.starY += this.centerY;\n        \n        this.starRadius = this.radius * (this.focalLength / this.z);\n        \n        this.starX += this.starX_dir;\n        this.starY += this.starY_dir;\n        \n        this.z += -10;\n        \n        if(this.z <= 0){\n            this.z = parseInt(innerWidth);\n        }\n        \n        this.draw(c);\n    \n    }\n    \n    \n    // Function for draw star\n    draw(c){\n        c.beginPath();\n        c.shadowColor = `rgb(${this.r}, ${this.g}, ${this.b})`;\n        c.shadowBlur = this.starRadius * 2;\n        c.fillStyle = `rgb(${this.r}, ${this.g}, ${this.b})`;\n        c.arc(this.starX,this.starY,this.starRadius, 2*Math.PI, false);\n        c.fill();\n        c.closePath();\n        c.shadowBlur = 0;\n    }\n};\n\n//# sourceURL=webpack:///./src/star3.js?");

/***/ }),

/***/ "./src/starfield.js":
/*!**************************!*\
  !*** ./src/starfield.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ StarField)\n/* harmony export */ });\n/* harmony import */ var _star3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./star3 */ \"./src/star3.js\");\n\n\nclass StarField\n{\n    constructor(canvas, width, height){\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d');\n        this.innerWidth = width - 10;\n        this.innerHeight = height- 10;\n        this.radius = 1;\n        this.starsIndex = 0;\n        this.stars = [];\n        this.centerX = width/2;\n        this.centerY = height/2;\n        this.focalLength = 100;\n        this.starRadius = null;\n        this.starX = null;\n        this.starY = null;\n        this.numStars = 500;\n        this.mouse = {};\n        this.starX_dir = 0;\n        this.starY_dir = 0;\n        this.continue = true;\n        this.initiateEnd = false;\n        \n        const image = new Image();\n        image.src  = \"images/instructions.png\";\n        image.onload = () => {\n            this.instructions = image;\n            this.i_width = this.innerWidth * .6;\n            this.i_height = this.innerHeight * .8;\n        }\n\n        const spacebar = new Image();\n        spacebar.src  = \"images/spacebar.png\";\n        spacebar.onload = () => {\n            this.spacebar = spacebar;\n            const SCALE = 0.4;\n            this.s_width = spacebar.width * SCALE;\n            this.s_height = spacebar.height * SCALE;\n        }\n\n        const wasd = new Image();\n        wasd.src  = \"images/wasd.png\";\n        wasd.onload = () => {\n            this.wasd = wasd;\n            const SCALE = 0.5;\n            this.w_width = wasd.width * SCALE;\n            this.w_height = wasd.height * SCALE;\n        }\n\n        const mousey = new Image();\n        mousey.src  = \"images/mouse.png\";\n        mousey.onload = () => {\n            this.mousey = mousey;\n            const SCALE = 0.12;\n            this.m_width = mousey.width * SCALE;\n            this.m_height = mousey.height * SCALE;\n        }\n\n        this.instructionsOn = false;\n\n\n        canvas.width = this.innerWidth;\n        canvas.height = this.innerHeight;\n\n        this.start();\n    }\n\n    start()\n    {\n        for(let s = 0; s < this.numStars; s++){\n            let x = Math.random() * this.innerWidth;\n            let y = Math.random() * this.innerHeight;\n            let z = Math.random() * this.innerWidth;\n            this.starsIndex++;\n            let my_star = new _star3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](x,y,z, this.radius, this.starsIndex, this.centerX, this.centerY, this.focalLength, this.starX_dir, this.starY_dir, this.innerWidth);\n            \n            this.stars[this.starsIndex] = my_star;\n        }\n\n        this.animate();\n    }\n\n    // Function for animate canvas objects\n    animate(){\n        if(this.continue){\n            let c = this.context;\n            requestAnimationFrame(this.animate.bind(this));\n            c.fillStyle = \"black\";\n            c.fillRect(0,0,this.innerWidth,this.innerHeight);\n        \n            \n            \n            for(let i = 1; i < 500; i++){\n                this.stars[i].focalLength = this.focalLength;\n                this.stars[i].update(c);\n                if(this.initiateEnd && this.focalLength > 500)\n                {\n                    this.stars[i].r -= 1;\n                    this.stars[i].g -= 1;\n                    this.stars[i].b -= 1;\n                }\n            }\n\n            if(this.instructionsOn) //why in god's name the instructions is inside here, I do not know. It should be refactored into the HTML\n            //and displayed on when clicked, instead of being hardcoded as part of starfield (where it can't even be reached via CSS    )\n            {   \n                \n                // c.canvas.width = 1280;\n                // c.canvas.height = 720;\n                c.save();\n                c.globalAlpha = 0.7;\n                c.fillStyle=\"black\";\n                c.fillRect(this.innerWidth * .203, this.innerHeight * .22, this.i_width * .86, this.i_height *.75);\n                c.fillStyle=\"black\";\n                c.globalAlpha = 1;\n                c.fillRect(this.innerWidth * .203, this.innerHeight * .12, this.i_width * .86, this.i_height *.123);\n                c.restore();\n                c.drawImage(this.instructions, this.innerWidth * .16, this.i_height * .06, this.i_width, this.i_height);\n                c.drawImage(this.spacebar, this.innerWidth * .33, this.innerHeight * .53, this.s_width, this.s_height);\n                c.drawImage(this.wasd, this.innerWidth * .33, this.innerHeight * .28, this.w_width, this.w_height);\n                c.drawImage(this.mousey, this.innerWidth * .55, this.innerHeight * .26, this.m_width, this.m_height);\n                c.font = '16px Planer';\n                c.fillStyle = \"white\";\n                c.fillText('Move Ship', this.innerWidth * .342, this.innerHeight * .44);\n                c.fillText('Aim Lasers', this.innerWidth * .54, this.innerHeight * .44);\n                c.fillText('Fire Lasers', this.innerWidth * .344, this.innerHeight * .67);\n\n                c.font = '35px Neuropol';\n                c.fillText('INSTRUCTIONS', this.innerWidth * .345, this.innerHeight * .19)\n\n            }            \n            if (this.initiateEnd)\n            {\n                if (this.focalLength < 1200)\n                {\n                    this.focalLength = this.focalLength + 2;\n                }\n                else\n                {\n                    this.continue = false;\n                }\n            }\n        }\n        else\n        {\n            this.stars = null;\n        }\n\n    }\n};\n\n//# sourceURL=webpack:///./src/starfield.js?");

/***/ }),

/***/ "./src/tutorial.js":
/*!*************************!*\
  !*** ./src/tutorial.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Tutorial)\n/* harmony export */ });\n/* harmony import */ var _star__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./star */ \"./src/star.js\");\n/* harmony import */ var _ship__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ship */ \"./src/ship.js\");\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./player */ \"./src/player.js\");\n/* harmony import */ var _drop__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./drop */ \"./src/drop.js\");\n\n\n\n\n\nclass Tutorial{\n    constructor(width, height, context, bgsong, parent)\n    {\n        this.width = width;\n        this.height = height;\n        this.context = context;\n        this.stars = [];\n        this.projectiles = [];\n        this.enemyprojectiles = [];\n        this.enemyships = [];\n        this.drops = [];\n        this.ship_level = 0;\n        \n\n        this.bgsong = bgsong; //prob not needed\n        //stats\n        this.gold = 0;\n        this.parent = parent;\n\n        this.stage = 0;\n        this.stage_helper = 0;//for counting stuff\n        //stage 0: move around\n        //stage 1: move into flags\n        //stage 2: shoot\n        //stage 3: shoot targets\n        //stage 4: power-ups [OPTIONAL]\n        //stage 5: use power-ups [OPTIONAL]\n        //stage 6: shop buy new \n        //stage 7: play!\n\n        this.popup_number = 0;\n        this.popup = true;\n\n\n        this.createLevel();\n        this.initializeStars(context);\n    };\n\n    createLevel()\n    {\n        this.player = new _player__WEBPACK_IMPORTED_MODULE_2__[\"default\"]([this.width / 2, this.height - 50], this.ship_level);\n        this.mouse_x = this.width / 2;\n        this.mouse_y = 0;\n        let handleMousemove = (event) => {\n            this.mouse_x = event.offsetX;\n            this.mouse_y = event.offsetY;\n        };\n          \n        //note: as explained in Player#animate, movement and other spontaneous events cannot be added here\n        document.addEventListener('mousemove', handleMousemove);\n        \n        document.body.addEventListener('keypress', function(e) {\n            if (e.key === \"Escape\") {\n                this.parent.initiateStart();\n            }\n        });\n        this.textpopup(this.popup_number);\n    }\n\n    // set up text to print, each item in array is new line\n    \n     \n    typewriter(aText, iIndex, sContents, iTextPos)\n    {\n        let iSpeed = 20;\n        let iScrollAt = 20; // start scrolling up at this many lines\n\n        sContents =  ' ';\n        let iRow = Math.max(0, iIndex-iScrollAt);\n        const destination = document.getElementById(\"typedtext\");\n        console.log(\"?\");\n        while ( iRow < iIndex ) {\n        sContents += aText[iRow++] + '<br />';\n        }\n        console.log(\"sContents\", sContents);\n        destination.innerHTML = sContents + aText[iIndex].substring(0, iTextPos);\n        //  destination.innerHTML = \"testing\";\n        if ( iTextPos++ == aText[iIndex].length ) {\n        iTextPos = 0;\n        iIndex++;\n        if ( iIndex != aText.length ) {\n        setTimeout(() => this.typewriter(aText, iIndex, sContents, iTextPos), 200);\n        }\n        } else {\n        setTimeout(() => this.typewriter(aText, iIndex, sContents, iTextPos), iSpeed);\n        }\n    }\n    \n    textpopup(num)\n    {\n        const popups = document.querySelector(\"#popups\");\n        const textbox = document.querySelector(\"#textbox\");\n        const mel_idle = document.querySelector(\"#mel-idle\");\n        const mel_talking = document.querySelector(\"#mel-talking\");\n        const typedtext = document.querySelector(\"#typedtext\");\n        const fade = document.querySelector(\".modal-background\");\n\n        if(num === 0)\n        {\n            popups.style.display = \"block\";\n            textbox.style.display = \"block\";\n            mel_talking.style.display = \"block\";\n            typedtext.style.display = \"block\";\n            fade.style.display = \"block\";\n\n            setTimeout(() => {\n                mel_talking.style.display = \"none\";\n                mel_idle.style.display = \"block\";\n            }, 3000); //change number once we test out the text\n            let aText = new Array(\n                \"This is currently a test! This textbox will be used\",\n                \"to implement a tutorial in the future. For now,\",\n                \"please refresh to restart the game\"\n            );\n            this.typewriter(aText, 0, 0, \" \", 0);\n        }\n    }\n\n    initializeStars(context)\n    {\n\n        for(let i = 0; i < 15; i++)\n        {\n            let posx = Math.random() * (this.width-10);\n            //let posy = 0;\n            \n            let size;\n            if (Math.random()*2 > 1.7)\n            {\n                size = Math.random()* 4 + 1;\n            }\n            else\n                size = Math.random()*2 + 1;\n            \n            let mystar = new _star__WEBPACK_IMPORTED_MODULE_0__[\"default\"](posx, Math.random()*1 + 0.2 + (size / (8)), size);\n\n            mystar.posY = Math.random()*this.height-10;\n            this.stars.push(mystar);\n\n            context.shadowBlur = 0;\n        }\n    }\n\n    animate(){\n        let context = this.context;\n        \n        context.fillStyle = \"black\";\n        context.fillRect(0, 0, this.width, this.height);\n\n        if(!this.popup) //probably can combine these two variables\n            {\n            this.createStars(context);\n            \n            if(key.isPressed(\" \") )\n            {\n                let proj = this.player.shootProjectile(this.mouse_x, this.mouse_y, 2);\n                if (proj)\n                {\n                    if(this.player.projectileType === 3)\n                    {\n                        audio.laser3.play();\n                    }\n                    else\n                    {\n                        audio.laser4.play();\n                    }\n\n                    this.projectiles = this.projectiles.concat(proj);\n                }\n            }\n            else\n            {\n                this.player.shootProjectile(null, null, -1);\n            }\n\n            this.updateAll(context);\n            this.player.animate(this.context, this.mouse_x, this.mouse_y);\n            this.checkCollisions(context);\n\n            this.updateUI(context);\n\n            requestAnimationFrame(this.animate.bind(this));\n        }   \n        else{\n            //do nothing... let player press buttons to choose\n        }\n        \n    }\n\n\n    createStars(context){\n        let numStars = 0;\n        for(let i=0; i<3; i++)\n        {\n            if(Math.random()*70 <= 1)\n            {\n                numStars++;\n            }\n        }\n        for(let j = 0; j< numStars; j++)\n        {\n            let posx = Math.random() * (this.width-10);\n            //let posy = 0;\n            \n            let size;\n            if (Math.random()*2 > 1.7)\n            {\n                size = Math.random()* 4 + 1;\n            }\n            else\n                size = Math.random()*2 + 1;\n\n            \n            let mystar = new _star__WEBPACK_IMPORTED_MODULE_0__[\"default\"](posx, Math.random()*1 + 0.2 + (size / (8)), size);\n            this.stars.push(mystar);\n            context.shadowBlur = 0;\n            // context.filter = \"none\";\n        }\n        \n    }\n\n    updateAll(context)\n    {\n        this.updateSomething(context, this.stars);\n        this.updateSomething(context, this.enemyships);\n\n        this.projectiles.forEach((proj) => {\n            proj.animate(this.context)\n        });\n\n        for(let i = this.projectiles.length - 1; i >= 0; i--) // problematic! need to go backwards\n        {\n            if(this.projectiles[i].outofBounds(this.width, this.height))\n            {\n                setTimeout(()=> \n                {\n                    this.projectiles.splice(i, 1);\n                }, 0);\n                \n            }\n        }\n\n        this.enemyprojectiles.forEach((proj) => {\n            proj.animate(this.context)\n        });\n\n        for(let i = this.enemyprojectiles.length - 1; i >= 0; i--)\n        {\n            if(this.enemyprojectiles[i].outofBounds(this.width, this.height))\n            {\n                setTimeout(()=> \n                {\n                    this.enemyprojectiles.splice(i, 1);\n                }, 0);\n            }\n        }\n\n        this.drops.forEach((drop) => {\n            drop.animate(this.context)\n        });\n\n        for(let i = this.drops.length - 1; i >= 0; i--)\n        {\n            if(this.drops[i].outofBounds(this.width, this.height))\n            {\n                setTimeout(()=> \n                {\n                    this.drops.splice(i, 1);\n                }, 0);\n            }\n        }\n    }\n\n    updateSomething(context, something){\n      \n        for(let i = something.length - 1; i >= 0; i--)\n        {\n            if(something[i].posY > this.height + 50)\n            {\n                something.splice(i, 1);\n            }\n        }\n        \n        something.forEach( (thingie) => {\n            thingie.animate(context);\n        })\n    }\n\n    checkCollisions(context)\n    {\n        //change to for-loop\n        for(let i = this.enemyships.length - 1; i >= 0; i--)\n        {\n            for(let j = this.projectiles.length - 1; j >= 0; j--)\n            {\n                if(this.collidesWith(this.projectiles[j], this.enemyships[i], \"enemyship\"))\n                {\n                    this.enemyships[i].health -= this.projectiles[j].damage;\n                    setTimeout(()=> \n                    {\n                        this.projectiles.splice(j, 1);\n                    }, 0);\n           \n                    \n                    if(this.enemyships[i].health <= 0)\n                    {\n                    \n                        setTimeout(()=> \n                        {\n                            this.handleEnemyDefeat(this.enemyships[i]);\n                           \n                            this.enemyships.splice(i, 1);\n                        }, 0);\n                       \n                        break;\n                    }\n\n            \n                }\n            }\n        }\n\n        for(let j = this.enemyprojectiles.length - 1; j >= 0; j--)\n        {\n            if(this.collidesWith(this.player, this.enemyprojectiles[j]))\n            {\n                audio.hit.play();\n                setTimeout(()=> \n                    {\n                        this.enemyprojectiles.splice(j, 1);\n                    }, 0);\n            }\n        }\n        //OPTIMIZATION ISSUE LOCATED HERE: CURRENTLY CHECKS ALLLLL SHIPS EVEN SHIPS FAR IN THE BACKGROUND\n     \n        for(let i = this.enemyships.length - 1; i >= 0; i--)\n        {\n            \n            // if(this.enemyships[i].type === 11)\n            // {\n            //     if(this.collidesWith(this.player, this.enemyships[i], \"corner\"));\n            //     // if(this.collidesWith(this.player, this.enemyships[i]))\n            //     {\n            //         this.player.dealDamage(1);\n\n            //         if(this.player.health <= 0)\n            //         {\n            //             this.bgsong.stop();\n            //         }\n\n            //         let n = this.normalizedVector(this.player, this.enemyships[i]);\n            //         this.player.collided = 20;\n            //         this.player.velX = n[0] * 13;\n            //         this.player.velY = n[1] * 13;\n            //     }\n            // }\n            // else\n            // {\n                if(this.collidesWith(this.player, this.enemyships[i], \"enemyship\"))\n                {\n                    \n                    let n = this.normalizedVector(this.player, this.enemyships[i]);\n                    this.player.collided = 20;\n                    this.player.velX = n[0] * 13;\n                    this.player.velY = n[1] * 13;\n\n                    if(!this.enemyships[i].boss && this.enemyships[i].type !== 8)\n                    {\n                        // this.enemyships[i].health -= 25;\n                        this.enemyships[i].collided = 13;\n                        this.enemyships[i].velX = n[0] * -13;\n                        this.enemyships[i].velY = n[1] * -13;   \n                    }\n                }\n            // }\n        }\n\n        for(let i = this.drops.length - 1; i >= 0; i--)\n        {\n            if(this.collidesWith(this.player, this.drops[i]))\n            {\n                audio.droppickup.play();\n                switch(this.drops[i].type)\n                {\n                    case 0: //health pack\n                        this.player.health = Math.min(this.player.health + 500, this.player.basehealth, this.player.health + this.player.basehealth / 2);\n                        break;\n                    case 1: //double fire\n                        this.player.projectileType = 2;\n                        this.player.shotsLeft = 50;\n                        break;\n                    case 2: //money\n                        this.gold += Math.floor(Math.random()* 6) * 1000 + 5000;\n                        break;\n                    case 3: //gamma ray\n                        this.player.projectileType = 3;\n                        this.player.shotsLeft = 60;\n                        break;\n                    case 4: \n                        this.player.shield = this.player.baseshield;\n                    break;\n\n                }\n                setTimeout(()=> \n                    {\n                        this.drops.splice(i, 1);\n                    }, 0);\n            }\n        }\n    }\n\n    collidesWith(a, b, type=\"normal\")//type is probably dead code from background.js\n    {\n        \n        if(type === \"normal\" || type === \"enemyship\")\n        {\n            if(type === \"enemyship\" && b.posY + b.height / 2 + 1 < 0)\n            {\n                return false;\n            }\n\n            if ((a.leftX() >= b.leftX() && a.leftX() <= b.rightX()) || (a.rightX() >= b.leftX() && a.rightX() <= b.rightX()))\n            {\n                if ((a.upY() >= b.upY() && a.upY() <= b.downY()) || (a.downY() >= b.upY() && a.downY() <= b.downY()))\n                {\n                    return true;\n                }\n            }\n            if ((b.leftX() >= a.leftX() && b.leftX() <= a.rightX()) || (b.rightX() >= a.leftX() && b.rightX() <= a.rightX()))\n            {\n                if ((b.upY() >= a.upY() && b.upY() <= a.downY()) || (b.downY() >= a.upY() && b.downY() <= a.downY()))\n                {\n                    return true;\n                }\n            }\n            return false;\n        }\n      \n    }\n\n    normalizedVector(a, b)\n    {\n        let target_x = a.realX();\n        let target_y = a.realY();\n        let distX = target_x - b.realX();\n        let distY = target_y - b.realY();\n\n        length = Math.sqrt(distX * distX + distY * distY);\n        // this.normalVector = [Math.abs(distX) / length, Math.abs(distY) / length];\n        return [distX / length, distY / length];\n    }\n\n    updateUI(ctx)\n    {\n        ctx.fillStyle = '#ff4040';\n        ctx.strokeStyle = \"black\"\n        ctx.textBaseline = 'top';\n        ctx.font = '10pt Verdana';\n        let healthtext = `Health: Infinite`;\n        ctx.textAlign = 'left';\n        // const t_width = ctx.measureText(text).width;\n        // const t_height = ctx.measureText(text).height;\n        ctx.fillText(healthtext, 20, this.height - 50);\n\n        ctx.fillStyle = \"#00EFF6\";\n        let shieldtext = `Shield: Infinite`;\n        ctx.fillText(shieldtext, 20, this.height - 75);\n\n        let goldtext = `Gold: ${Math.floor(this.gold)}`;\n        ctx.textAlign = 'right';\n        ctx.fillStyle = 'gold';\n        ctx.fillText(goldtext, this.width-20, this.height - 50);\n\n\n        // ctx.fillText('this.', this.width-20, this.height - 50);\n        ctx.textAlign = 'start';\n    }\n\n    //need to make sound & explosion\n    handleEnemyDefeat(e_ship)\n    {\n        this.enemiesdefeated++;\n        this.gold += e_ship.gold;\n        let v = e_ship.value;\n        //use value to indicate the specific ship that is supposed to drop a drop\n        //if/when we get there\n    }\n\n    \n\n}\n\n\n\n//# sourceURL=webpack:///./src/tutorial.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;